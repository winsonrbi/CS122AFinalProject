
Milestone1Gun.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  000010c0  00001154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000222  00800126  00800126  0000117a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000117a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00001218  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000186a  00000000  00000000  00001358  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a83  00000000  00000000  00002bc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cf3  00000000  00000000  00003645  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000388  00000000  00000000  00004338  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000865  00000000  00000000  000046c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fd7  00000000  00000000  00004f25  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00005efc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
       2:	00 00       	nop
       4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	8f c1       	rjmp	.+798    	; 0x354 <__vector_13>
      36:	00 00       	nop
      38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
      66:	00 00       	nop
      68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <CHARSET>:
      8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
     26c:	11 24       	eor	r1, r1
     26e:	1f be       	out	0x3f, r1	; 63
     270:	cf ef       	ldi	r28, 0xFF	; 255
     272:	d0 e4       	ldi	r29, 0x40	; 64
     274:	de bf       	out	0x3e, r29	; 62
     276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
     278:	11 e0       	ldi	r17, 0x01	; 1
     27a:	a0 e0       	ldi	r26, 0x00	; 0
     27c:	b1 e0       	ldi	r27, 0x01	; 1
     27e:	e0 ec       	ldi	r30, 0xC0	; 192
     280:	f0 e1       	ldi	r31, 0x10	; 16
     282:	00 e0       	ldi	r16, 0x00	; 0
     284:	0b bf       	out	0x3b, r16	; 59
     286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
     288:	07 90       	elpm	r0, Z+
     28a:	0d 92       	st	X+, r0
     28c:	a6 32       	cpi	r26, 0x26	; 38
     28e:	b1 07       	cpc	r27, r17
     290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
     292:	23 e0       	ldi	r18, 0x03	; 3
     294:	a6 e2       	ldi	r26, 0x26	; 38
     296:	b1 e0       	ldi	r27, 0x01	; 1
     298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
     29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
     29c:	a8 34       	cpi	r26, 0x48	; 72
     29e:	b2 07       	cpc	r27, r18
     2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
     2a2:	83 d3       	rcall	.+1798   	; 0x9aa <main>
     2a4:	0b c7       	rjmp	.+3606   	; 0x10bc <_exit>

000002a6 <__bad_interrupt>:
     2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <write>:
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
	nokia_lcd.cursor_y = y;
     2a8:	10 98       	cbi	0x02, 0	; 2
     2aa:	66 23       	and	r22, r22
     2ac:	11 f0       	breq	.+4      	; 0x2b2 <write+0xa>
     2ae:	12 9a       	sbi	0x02, 2	; 2
     2b0:	15 c0       	rjmp	.+42     	; 0x2dc <write+0x34>
     2b2:	12 98       	cbi	0x02, 2	; 2
     2b4:	13 c0       	rjmp	.+38     	; 0x2dc <write+0x34>
     2b6:	ac 01       	movw	r20, r24
     2b8:	02 2e       	mov	r0, r18
     2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <write+0x18>
     2bc:	55 95       	asr	r21
     2be:	47 95       	ror	r20
     2c0:	0a 94       	dec	r0
     2c2:	e2 f7       	brpl	.-8      	; 0x2bc <write+0x14>
     2c4:	40 ff       	sbrs	r20, 0
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <write+0x24>
     2c8:	13 9a       	sbi	0x02, 3	; 2
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <write+0x26>
     2cc:	13 98       	cbi	0x02, 3	; 2
     2ce:	14 9a       	sbi	0x02, 4	; 2
     2d0:	14 98       	cbi	0x02, 4	; 2
     2d2:	21 50       	subi	r18, 0x01	; 1
     2d4:	31 09       	sbc	r19, r1
     2d6:	78 f7       	brcc	.-34     	; 0x2b6 <write+0xe>
     2d8:	10 9a       	sbi	0x02, 0	; 2
     2da:	08 95       	ret
     2dc:	27 e0       	ldi	r18, 0x07	; 7
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	e9 cf       	rjmp	.-46     	; 0x2b6 <write+0xe>

000002e4 <write_cmd>:
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	e0 cf       	rjmp	.-64     	; 0x2a8 <write>
     2e8:	08 95       	ret

000002ea <TimerSet>:
     2ea:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <_avr_timer_M>
     2ee:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <_avr_timer_M+0x1>
     2f2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_avr_timer_M+0x2>
     2f6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_avr_timer_M+0x3>
     2fa:	60 93 43 03 	sts	0x0343, r22	; 0x800343 <_avr_timer_cntcurr>
     2fe:	70 93 44 03 	sts	0x0344, r23	; 0x800344 <_avr_timer_cntcurr+0x1>
     302:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <_avr_timer_cntcurr+0x2>
     306:	90 93 46 03 	sts	0x0346, r25	; 0x800346 <_avr_timer_cntcurr+0x3>
     30a:	08 95       	ret

0000030c <TimerOn>:
     30c:	8b e0       	ldi	r24, 0x0B	; 11
     30e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     312:	8d e7       	ldi	r24, 0x7D	; 125
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     31a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     31e:	82 e0       	ldi	r24, 0x02	; 2
     320:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     324:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     328:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     32c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
     330:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
     334:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
     338:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
     33c:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_avr_timer_cntcurr>
     340:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <_avr_timer_cntcurr+0x1>
     344:	a0 93 45 03 	sts	0x0345, r26	; 0x800345 <_avr_timer_cntcurr+0x2>
     348:	b0 93 46 03 	sts	0x0346, r27	; 0x800346 <_avr_timer_cntcurr+0x3>
     34c:	8f b7       	in	r24, 0x3f	; 63
     34e:	80 68       	ori	r24, 0x80	; 128
     350:	8f bf       	out	0x3f, r24	; 63
     352:	08 95       	ret

00000354 <__vector_13>:
     354:	1f 92       	push	r1
     356:	0f 92       	push	r0
     358:	0f b6       	in	r0, 0x3f	; 63
     35a:	0f 92       	push	r0
     35c:	11 24       	eor	r1, r1
     35e:	8f 93       	push	r24
     360:	9f 93       	push	r25
     362:	af 93       	push	r26
     364:	bf 93       	push	r27
     366:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <_avr_timer_cntcurr>
     36a:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <_avr_timer_cntcurr+0x1>
     36e:	a0 91 45 03 	lds	r26, 0x0345	; 0x800345 <_avr_timer_cntcurr+0x2>
     372:	b0 91 46 03 	lds	r27, 0x0346	; 0x800346 <_avr_timer_cntcurr+0x3>
     376:	01 97       	sbiw	r24, 0x01	; 1
     378:	a1 09       	sbc	r26, r1
     37a:	b1 09       	sbc	r27, r1
     37c:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_avr_timer_cntcurr>
     380:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <_avr_timer_cntcurr+0x1>
     384:	a0 93 45 03 	sts	0x0345, r26	; 0x800345 <_avr_timer_cntcurr+0x2>
     388:	b0 93 46 03 	sts	0x0346, r27	; 0x800346 <_avr_timer_cntcurr+0x3>
     38c:	89 2b       	or	r24, r25
     38e:	8a 2b       	or	r24, r26
     390:	8b 2b       	or	r24, r27
     392:	99 f4       	brne	.+38     	; 0x3ba <__vector_13+0x66>
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <TimerFlag>
     39a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
     39e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
     3a2:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
     3a6:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
     3aa:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <_avr_timer_cntcurr>
     3ae:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <_avr_timer_cntcurr+0x1>
     3b2:	a0 93 45 03 	sts	0x0345, r26	; 0x800345 <_avr_timer_cntcurr+0x2>
     3b6:	b0 93 46 03 	sts	0x0346, r27	; 0x800346 <_avr_timer_cntcurr+0x3>
     3ba:	bf 91       	pop	r27
     3bc:	af 91       	pop	r26
     3be:	9f 91       	pop	r25
     3c0:	8f 91       	pop	r24
     3c2:	0f 90       	pop	r0
     3c4:	0f be       	out	0x3f, r0	; 63
     3c6:	0f 90       	pop	r0
     3c8:	1f 90       	pop	r1
     3ca:	18 95       	reti

000003cc <initUSART>:
     3cc:	81 30       	cpi	r24, 0x01	; 1
     3ce:	81 f0       	breq	.+32     	; 0x3f0 <initUSART+0x24>
     3d0:	e1 ec       	ldi	r30, 0xC1	; 193
     3d2:	f0 e0       	ldi	r31, 0x00	; 0
     3d4:	80 81       	ld	r24, Z
     3d6:	88 61       	ori	r24, 0x18	; 24
     3d8:	80 83       	st	Z, r24
     3da:	e2 ec       	ldi	r30, 0xC2	; 194
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	80 81       	ld	r24, Z
     3e0:	86 60       	ori	r24, 0x06	; 6
     3e2:	80 83       	st	Z, r24
     3e4:	83 e3       	ldi	r24, 0x33	; 51
     3e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     3ea:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     3ee:	08 95       	ret
     3f0:	e9 ec       	ldi	r30, 0xC9	; 201
     3f2:	f0 e0       	ldi	r31, 0x00	; 0
     3f4:	80 81       	ld	r24, Z
     3f6:	88 61       	ori	r24, 0x18	; 24
     3f8:	80 83       	st	Z, r24
     3fa:	ea ec       	ldi	r30, 0xCA	; 202
     3fc:	f0 e0       	ldi	r31, 0x00	; 0
     3fe:	80 81       	ld	r24, Z
     400:	86 60       	ori	r24, 0x06	; 6
     402:	80 83       	st	Z, r24
     404:	83 e3       	ldi	r24, 0x33	; 51
     406:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     40a:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     40e:	08 95       	ret

00000410 <USART_Flush>:
     410:	81 30       	cpi	r24, 0x01	; 1
     412:	29 f4       	brne	.+10     	; 0x41e <USART_Flush+0xe>
     414:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     418:	88 23       	and	r24, r24
     41a:	74 f0       	brlt	.+28     	; 0x438 <USART_Flush+0x28>
     41c:	08 95       	ret
     41e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     422:	88 23       	and	r24, r24
     424:	8c f4       	brge	.+34     	; 0x448 <USART_Flush+0x38>
     426:	a6 ec       	ldi	r26, 0xC6	; 198
     428:	b0 e0       	ldi	r27, 0x00	; 0
     42a:	e0 ec       	ldi	r30, 0xC0	; 192
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	8c 91       	ld	r24, X
     430:	80 81       	ld	r24, Z
     432:	88 23       	and	r24, r24
     434:	e4 f3       	brlt	.-8      	; 0x42e <USART_Flush+0x1e>
     436:	08 95       	ret
     438:	ae ec       	ldi	r26, 0xCE	; 206
     43a:	b0 e0       	ldi	r27, 0x00	; 0
     43c:	e8 ec       	ldi	r30, 0xC8	; 200
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	8c 91       	ld	r24, X
     442:	80 81       	ld	r24, Z
     444:	88 23       	and	r24, r24
     446:	e4 f3       	brlt	.-8      	; 0x440 <USART_Flush+0x30>
     448:	08 95       	ret

0000044a <USART_Send>:
     44a:	61 30       	cpi	r22, 0x01	; 1
     44c:	41 f0       	breq	.+16     	; 0x45e <USART_Send+0x14>
     44e:	e0 ec       	ldi	r30, 0xC0	; 192
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	90 81       	ld	r25, Z
     454:	95 ff       	sbrs	r25, 5
     456:	fd cf       	rjmp	.-6      	; 0x452 <USART_Send+0x8>
     458:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     45c:	08 95       	ret
     45e:	e8 ec       	ldi	r30, 0xC8	; 200
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	90 81       	ld	r25, Z
     464:	95 ff       	sbrs	r25, 5
     466:	fd cf       	rjmp	.-6      	; 0x462 <USART_Send+0x18>
     468:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     46c:	08 95       	ret

0000046e <USART_Receive>:
     46e:	81 30       	cpi	r24, 0x01	; 1
     470:	41 f0       	breq	.+16     	; 0x482 <USART_Receive+0x14>
     472:	e0 ec       	ldi	r30, 0xC0	; 192
     474:	f0 e0       	ldi	r31, 0x00	; 0
     476:	80 81       	ld	r24, Z
     478:	88 23       	and	r24, r24
     47a:	ec f7       	brge	.-6      	; 0x476 <USART_Receive+0x8>
     47c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     480:	08 95       	ret
     482:	e8 ec       	ldi	r30, 0xC8	; 200
     484:	f0 e0       	ldi	r31, 0x00	; 0
     486:	80 81       	ld	r24, Z
     488:	88 23       	and	r24, r24
     48a:	ec f7       	brge	.-6      	; 0x486 <USART_Receive+0x18>
     48c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     490:	08 95       	ret

00000492 <nokia_lcd_init>:
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	08 9a       	sbi	0x01, 0	; 1
     498:	09 9a       	sbi	0x01, 1	; 1
     49a:	0a 9a       	sbi	0x01, 2	; 1
     49c:	0b 9a       	sbi	0x01, 3	; 1
     49e:	0c 9a       	sbi	0x01, 4	; 1
     4a0:	11 9a       	sbi	0x02, 1	; 2
     4a2:	10 9a       	sbi	0x02, 0	; 2
     4a4:	8f e1       	ldi	r24, 0x1F	; 31
     4a6:	9e e4       	ldi	r25, 0x4E	; 78
     4a8:	01 97       	sbiw	r24, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <nokia_lcd_init+0x16>
     4ac:	00 c0       	rjmp	.+0      	; 0x4ae <nokia_lcd_init+0x1c>
     4ae:	00 00       	nop
     4b0:	11 98       	cbi	0x02, 1	; 2
     4b2:	9f e7       	ldi	r25, 0x7F	; 127
     4b4:	25 eb       	ldi	r18, 0xB5	; 181
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	91 50       	subi	r25, 0x01	; 1
     4ba:	20 40       	sbci	r18, 0x00	; 0
     4bc:	80 40       	sbci	r24, 0x00	; 0
     4be:	e1 f7       	brne	.-8      	; 0x4b8 <nokia_lcd_init+0x26>
     4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <nokia_lcd_init+0x30>
     4c2:	00 00       	nop
     4c4:	11 9a       	sbi	0x02, 1	; 2
     4c6:	10 98       	cbi	0x02, 0	; 2
     4c8:	81 e2       	ldi	r24, 0x21	; 33
     4ca:	0c df       	rcall	.-488    	; 0x2e4 <write_cmd>
     4cc:	83 e1       	ldi	r24, 0x13	; 19
     4ce:	0a df       	rcall	.-492    	; 0x2e4 <write_cmd>
     4d0:	86 e0       	ldi	r24, 0x06	; 6
     4d2:	08 df       	rcall	.-496    	; 0x2e4 <write_cmd>
     4d4:	82 ec       	ldi	r24, 0xC2	; 194
     4d6:	06 df       	rcall	.-500    	; 0x2e4 <write_cmd>
     4d8:	80 e2       	ldi	r24, 0x20	; 32
     4da:	04 df       	rcall	.-504    	; 0x2e4 <write_cmd>
     4dc:	89 e0       	ldi	r24, 0x09	; 9
     4de:	02 df       	rcall	.-508    	; 0x2e4 <write_cmd>
     4e0:	80 e8       	ldi	r24, 0x80	; 128
     4e2:	00 df       	rcall	.-512    	; 0x2e4 <write_cmd>
     4e4:	80 e4       	ldi	r24, 0x40	; 64
     4e6:	fe de       	rcall	.-516    	; 0x2e4 <write_cmd>
     4e8:	c8 ef       	ldi	r28, 0xF8	; 248
     4ea:	d1 e0       	ldi	r29, 0x01	; 1
     4ec:	61 e0       	ldi	r22, 0x01	; 1
     4ee:	80 e0       	ldi	r24, 0x00	; 0
     4f0:	db de       	rcall	.-586    	; 0x2a8 <write>
     4f2:	21 97       	sbiw	r28, 0x01	; 1
     4f4:	d9 f7       	brne	.-10     	; 0x4ec <nokia_lcd_init+0x5a>
     4f6:	88 e0       	ldi	r24, 0x08	; 8
     4f8:	f5 de       	rcall	.-534    	; 0x2e4 <write_cmd>
     4fa:	8c e0       	ldi	r24, 0x0C	; 12
     4fc:	f3 de       	rcall	.-538    	; 0x2e4 <write_cmd>
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	08 95       	ret

00000504 <nokia_lcd_clear>:
     504:	80 e8       	ldi	r24, 0x80	; 128
     506:	ee de       	rcall	.-548    	; 0x2e4 <write_cmd>
     508:	80 e4       	ldi	r24, 0x40	; 64
     50a:	ec de       	rcall	.-552    	; 0x2e4 <write_cmd>
     50c:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <nokia_lcd+0x1f8>
     510:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <nokia_lcd+0x1f9>
     514:	e9 e4       	ldi	r30, 0x49	; 73
     516:	f1 e0       	ldi	r31, 0x01	; 1
     518:	81 e4       	ldi	r24, 0x41	; 65
     51a:	93 e0       	ldi	r25, 0x03	; 3
     51c:	11 92       	st	Z+, r1
     51e:	e8 17       	cp	r30, r24
     520:	f9 07       	cpc	r31, r25
     522:	e1 f7       	brne	.-8      	; 0x51c <nokia_lcd_clear+0x18>
     524:	08 95       	ret

00000526 <nokia_lcd_set_pixel>:
     526:	26 2f       	mov	r18, r22
     528:	26 95       	lsr	r18
     52a:	26 95       	lsr	r18
     52c:	26 95       	lsr	r18
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	34 e5       	ldi	r19, 0x54	; 84
     532:	23 9f       	mul	r18, r19
     534:	80 0d       	add	r24, r0
     536:	91 1d       	adc	r25, r1
     538:	11 24       	eor	r1, r1
     53a:	44 23       	and	r20, r20
     53c:	79 f0       	breq	.+30     	; 0x55c <nokia_lcd_set_pixel+0x36>
     53e:	fc 01       	movw	r30, r24
     540:	e7 5b       	subi	r30, 0xB7	; 183
     542:	fe 4f       	sbci	r31, 0xFE	; 254
     544:	67 70       	andi	r22, 0x07	; 7
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	02 c0       	rjmp	.+4      	; 0x550 <nokia_lcd_set_pixel+0x2a>
     54c:	88 0f       	add	r24, r24
     54e:	99 1f       	adc	r25, r25
     550:	6a 95       	dec	r22
     552:	e2 f7       	brpl	.-8      	; 0x54c <nokia_lcd_set_pixel+0x26>
     554:	90 81       	ld	r25, Z
     556:	89 2b       	or	r24, r25
     558:	80 83       	st	Z, r24
     55a:	08 95       	ret
     55c:	fc 01       	movw	r30, r24
     55e:	e7 5b       	subi	r30, 0xB7	; 183
     560:	fe 4f       	sbci	r31, 0xFE	; 254
     562:	67 70       	andi	r22, 0x07	; 7
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	02 c0       	rjmp	.+4      	; 0x56e <nokia_lcd_set_pixel+0x48>
     56a:	88 0f       	add	r24, r24
     56c:	99 1f       	adc	r25, r25
     56e:	6a 95       	dec	r22
     570:	e2 f7       	brpl	.-8      	; 0x56a <nokia_lcd_set_pixel+0x44>
     572:	80 95       	com	r24
     574:	90 81       	ld	r25, Z
     576:	89 23       	and	r24, r25
     578:	80 83       	st	Z, r24
     57a:	08 95       	ret

0000057c <nokia_lcd_write_char>:
     57c:	5f 92       	push	r5
     57e:	6f 92       	push	r6
     580:	7f 92       	push	r7
     582:	8f 92       	push	r8
     584:	9f 92       	push	r9
     586:	af 92       	push	r10
     588:	bf 92       	push	r11
     58a:	cf 92       	push	r12
     58c:	df 92       	push	r13
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	56 2e       	mov	r5, r22
     59c:	26 2f       	mov	r18, r22
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	49 01       	movw	r8, r18
     5a2:	88 0c       	add	r8, r8
     5a4:	99 1c       	adc	r9, r9
     5a6:	88 0c       	add	r8, r8
     5a8:	99 1c       	adc	r9, r9
     5aa:	82 0e       	add	r8, r18
     5ac:	93 1e       	adc	r9, r19
     5ae:	18 14       	cp	r1, r8
     5b0:	19 04       	cpc	r1, r9
     5b2:	0c f0       	brlt	.+2      	; 0x5b6 <nokia_lcd_write_char+0x3a>
     5b4:	59 c0       	rjmp	.+178    	; 0x668 <nokia_lcd_write_char+0xec>
     5b6:	89 01       	movw	r16, r18
     5b8:	00 0f       	add	r16, r16
     5ba:	11 1f       	adc	r17, r17
     5bc:	00 0f       	add	r16, r16
     5be:	11 1f       	adc	r17, r17
     5c0:	00 0f       	add	r16, r16
     5c2:	11 1f       	adc	r17, r17
     5c4:	02 1b       	sub	r16, r18
     5c6:	13 0b       	sbc	r17, r19
     5c8:	61 2c       	mov	r6, r1
     5ca:	a8 2e       	mov	r10, r24
     5cc:	b1 2c       	mov	r11, r1
     5ce:	c5 01       	movw	r24, r10
     5d0:	80 97       	sbiw	r24, 0x20	; 32
     5d2:	5c 01       	movw	r10, r24
     5d4:	aa 0c       	add	r10, r10
     5d6:	bb 1c       	adc	r11, r11
     5d8:	aa 0c       	add	r10, r10
     5da:	bb 1c       	adc	r11, r11
     5dc:	a8 0e       	add	r10, r24
     5de:	b9 1e       	adc	r11, r25
     5e0:	0f 2e       	mov	r0, r31
     5e2:	f2 e4       	ldi	r31, 0x42	; 66
     5e4:	cf 2e       	mov	r12, r31
     5e6:	f3 e0       	ldi	r31, 0x03	; 3
     5e8:	df 2e       	mov	r13, r31
     5ea:	f0 2d       	mov	r31, r0
     5ec:	0f 2e       	mov	r0, r31
     5ee:	f1 e4       	ldi	r31, 0x41	; 65
     5f0:	ef 2e       	mov	r14, r31
     5f2:	f3 e0       	ldi	r31, 0x03	; 3
     5f4:	ff 2e       	mov	r15, r31
     5f6:	f0 2d       	mov	r31, r0
     5f8:	2a c0       	rjmp	.+84     	; 0x64e <nokia_lcd_write_char+0xd2>
     5fa:	fe 01       	movw	r30, r28
     5fc:	24 91       	lpm	r18, Z
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	87 2d       	mov	r24, r7
     602:	65 2d       	mov	r22, r5
     604:	74 d2       	rcall	.+1256   	; 0xaee <__udivmodqi4>
     606:	02 c0       	rjmp	.+4      	; 0x60c <nokia_lcd_write_char+0x90>
     608:	35 95       	asr	r19
     60a:	27 95       	ror	r18
     60c:	8a 95       	dec	r24
     60e:	e2 f7       	brpl	.-8      	; 0x608 <nokia_lcd_write_char+0x8c>
     610:	20 ff       	sbrs	r18, 0
     612:	09 c0       	rjmp	.+18     	; 0x626 <nokia_lcd_write_char+0xaa>
     614:	f6 01       	movw	r30, r12
     616:	60 81       	ld	r22, Z
     618:	67 0d       	add	r22, r7
     61a:	f7 01       	movw	r30, r14
     61c:	80 81       	ld	r24, Z
     61e:	41 e0       	ldi	r20, 0x01	; 1
     620:	86 0d       	add	r24, r6
     622:	81 df       	rcall	.-254    	; 0x526 <nokia_lcd_set_pixel>
     624:	08 c0       	rjmp	.+16     	; 0x636 <nokia_lcd_write_char+0xba>
     626:	f6 01       	movw	r30, r12
     628:	60 81       	ld	r22, Z
     62a:	67 0d       	add	r22, r7
     62c:	f7 01       	movw	r30, r14
     62e:	80 81       	ld	r24, Z
     630:	40 e0       	ldi	r20, 0x00	; 0
     632:	86 0d       	add	r24, r6
     634:	78 df       	rcall	.-272    	; 0x526 <nokia_lcd_set_pixel>
     636:	73 94       	inc	r7
     638:	87 2d       	mov	r24, r7
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	80 17       	cp	r24, r16
     63e:	91 07       	cpc	r25, r17
     640:	e4 f2       	brlt	.-72     	; 0x5fa <nokia_lcd_write_char+0x7e>
     642:	63 94       	inc	r6
     644:	86 2d       	mov	r24, r6
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	88 15       	cp	r24, r8
     64a:	99 05       	cpc	r25, r9
     64c:	6c f4       	brge	.+26     	; 0x668 <nokia_lcd_write_char+0xec>
     64e:	10 16       	cp	r1, r16
     650:	11 06       	cpc	r1, r17
     652:	bc f7       	brge	.-18     	; 0x642 <nokia_lcd_write_char+0xc6>
     654:	86 2d       	mov	r24, r6
     656:	65 2d       	mov	r22, r5
     658:	4a d2       	rcall	.+1172   	; 0xaee <__udivmodqi4>
     65a:	e5 01       	movw	r28, r10
     65c:	c8 0f       	add	r28, r24
     65e:	d1 1d       	adc	r29, r1
     660:	c4 57       	subi	r28, 0x74	; 116
     662:	df 4f       	sbci	r29, 0xFF	; 255
     664:	71 2c       	mov	r7, r1
     666:	c9 cf       	rjmp	.-110    	; 0x5fa <nokia_lcd_write_char+0x7e>
     668:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <nokia_lcd+0x1f8>
     66c:	91 e0       	ldi	r25, 0x01	; 1
     66e:	98 0f       	add	r25, r24
     670:	85 2d       	mov	r24, r5
     672:	88 0f       	add	r24, r24
     674:	88 0f       	add	r24, r24
     676:	85 0d       	add	r24, r5
     678:	89 0f       	add	r24, r25
     67a:	84 35       	cpi	r24, 0x54	; 84
     67c:	18 f4       	brcc	.+6      	; 0x684 <nokia_lcd_write_char+0x108>
     67e:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <nokia_lcd+0x1f8>
     682:	0e c0       	rjmp	.+28     	; 0x6a0 <nokia_lcd_write_char+0x124>
     684:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <nokia_lcd+0x1f8>
     688:	e2 e4       	ldi	r30, 0x42	; 66
     68a:	f3 e0       	ldi	r31, 0x03	; 3
     68c:	80 81       	ld	r24, Z
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	98 0f       	add	r25, r24
     692:	85 2d       	mov	r24, r5
     694:	88 0f       	add	r24, r24
     696:	88 0f       	add	r24, r24
     698:	88 0f       	add	r24, r24
     69a:	85 19       	sub	r24, r5
     69c:	89 0f       	add	r24, r25
     69e:	80 83       	st	Z, r24
     6a0:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <nokia_lcd+0x1f9>
     6a4:	80 33       	cpi	r24, 0x30	; 48
     6a6:	20 f0       	brcs	.+8      	; 0x6b0 <nokia_lcd_write_char+0x134>
     6a8:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <nokia_lcd+0x1f8>
     6ac:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <nokia_lcd+0x1f9>
     6b0:	df 91       	pop	r29
     6b2:	cf 91       	pop	r28
     6b4:	1f 91       	pop	r17
     6b6:	0f 91       	pop	r16
     6b8:	ff 90       	pop	r15
     6ba:	ef 90       	pop	r14
     6bc:	df 90       	pop	r13
     6be:	cf 90       	pop	r12
     6c0:	bf 90       	pop	r11
     6c2:	af 90       	pop	r10
     6c4:	9f 90       	pop	r9
     6c6:	8f 90       	pop	r8
     6c8:	7f 90       	pop	r7
     6ca:	6f 90       	pop	r6
     6cc:	5f 90       	pop	r5
     6ce:	08 95       	ret

000006d0 <nokia_lcd_write_string>:
     6d0:	1f 93       	push	r17
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	ec 01       	movw	r28, r24
     6d8:	88 81       	ld	r24, Y
     6da:	88 23       	and	r24, r24
     6dc:	39 f0       	breq	.+14     	; 0x6ec <nokia_lcd_write_string+0x1c>
     6de:	16 2f       	mov	r17, r22
     6e0:	21 96       	adiw	r28, 0x01	; 1
     6e2:	61 2f       	mov	r22, r17
     6e4:	4b df       	rcall	.-362    	; 0x57c <nokia_lcd_write_char>
     6e6:	89 91       	ld	r24, Y+
     6e8:	81 11       	cpse	r24, r1
     6ea:	fb cf       	rjmp	.-10     	; 0x6e2 <nokia_lcd_write_string+0x12>
     6ec:	df 91       	pop	r29
     6ee:	cf 91       	pop	r28
     6f0:	1f 91       	pop	r17
     6f2:	08 95       	ret

000006f4 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
     6f4:	0f 93       	push	r16
     6f6:	1f 93       	push	r17
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
     6fc:	80 e8       	ldi	r24, 0x80	; 128
     6fe:	f2 dd       	rcall	.-1052   	; 0x2e4 <write_cmd>
	write_cmd(0x40);
     700:	80 e4       	ldi	r24, 0x40	; 64
     702:	f0 dd       	rcall	.-1056   	; 0x2e4 <write_cmd>
     704:	c9 e4       	ldi	r28, 0x49	; 73
     706:	d1 e0       	ldi	r29, 0x01	; 1
     708:	01 e4       	ldi	r16, 0x41	; 65
     70a:	13 e0       	ldi	r17, 0x03	; 3
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
     70c:	61 e0       	ldi	r22, 0x01	; 1
     70e:	89 91       	ld	r24, Y+
     710:	cb dd       	rcall	.-1130   	; 0x2a8 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     712:	c0 17       	cp	r28, r16
     714:	d1 07       	cpc	r29, r17
     716:	d1 f7       	brne	.-12     	; 0x70c <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	08 95       	ret

00000722 <commTranslate>:
	nokia_lcd_write_string("Game Over",1);
	nokia_lcd_render();
	while(1);
}
void commTranslate(unsigned char data){
	PORTC=data;
     722:	88 b9       	out	0x08, r24	; 8
	
	if(data == 0x01){
     724:	81 30       	cpi	r24, 0x01	; 1
     726:	a1 f4       	brne	.+40     	; 0x750 <commTranslate+0x2e>
		//Hit a special target, add 3 bullets to bulletCount
		if((bulletCount + 3) > 6){
     728:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <bulletCount>
     72c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <bulletCount+0x1>
     730:	03 96       	adiw	r24, 0x03	; 3
     732:	87 30       	cpi	r24, 0x07	; 7
     734:	91 05       	cpc	r25, r1
     736:	38 f0       	brcs	.+14     	; 0x746 <commTranslate+0x24>
			bulletCount = 6;
     738:	86 e0       	ldi	r24, 0x06	; 6
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <bulletCount+0x1>
     740:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <bulletCount>
     744:	08 95       	ret
		}
		else{
			bulletCount = bulletCount + 3;
     746:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <bulletCount+0x1>
     74a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <bulletCount>
     74e:	08 95       	ret
		}
		return;
	}
	if(data == 0x02){
     750:	82 30       	cpi	r24, 0x02	; 2
     752:	11 f4       	brne	.+4      	; 0x758 <commTranslate+0x36>
		//Time is up
		gameOver();
     754:	2e c0       	rjmp	.+92     	; 0x7b2 <gameOver>
     756:	08 95       	ret
	}
	if(data == 0x03){
     758:	83 30       	cpi	r24, 0x03	; 3
     75a:	31 f4       	brne	.+12     	; 0x768 <commTranslate+0x46>
		//Start Game
		gameStart = 1;
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     764:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     768:	08 95       	ret

0000076a <sendToTarget>:
unsigned char tempB = 0x00;
unsigned char tempC = 0x00;
unsigned int coolDownCount = 2;
unsigned int bulletCount = 6;
unsigned int gameStart = 1;
void sendToTarget(unsigned char data){
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	c8 2f       	mov	r28, r24
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
     770:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	unsigned char payload = 0x00;
	if(USART_HasReceived(0)){ //Message Received
     774:	88 23       	and	r24, r24
     776:	44 f4       	brge	.+16     	; 0x788 <sendToTarget+0x1e>
		payload = USART_Receive(0);
     778:	80 e0       	ldi	r24, 0x00	; 0
     77a:	79 de       	rcall	.-782    	; 0x46e <USART_Receive>
     77c:	d8 2f       	mov	r29, r24
		USART_Flush(0);
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	47 de       	rcall	.-882    	; 0x410 <USART_Flush>
		commTranslate(payload);
     782:	8d 2f       	mov	r24, r29
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	cd df       	rcall	.-102    	; 0x722 <commTranslate>
//Functionality - checks if USART is ready to send
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_IsSendReady(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << UDRE0)) : (UCSR1A & (1 << UDRE1));
     788:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	}
	if(USART_IsSendReady(0)){
     78c:	85 ff       	sbrs	r24, 5
		USART_Send(data,0);
     78e:	0e c0       	rjmp	.+28     	; 0x7ac <sendToTarget+0x42>
     790:	60 e0       	ldi	r22, 0x00	; 0
     792:	8c 2f       	mov	r24, r28
     794:	5a de       	rcall	.-844    	; 0x44a <USART_Send>
//Functionality - checks if USART has successfully transmitted data
//Parameter: usartNum specifies which USART is being checked
//Returns: 1 if true else 0
unsigned char USART_HasTransmitted(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << TXC0)) : (UCSR1A & (1 << TXC1));
     796:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
		while(USART_HasTransmitted(0) == 0){
     79a:	86 fd       	sbrc	r24, 6
     79c:	07 c0       	rjmp	.+14     	; 0x7ac <sendToTarget+0x42>
			PORTB = 0xFF;
     79e:	9f ef       	ldi	r25, 0xFF	; 255
     7a0:	e0 ec       	ldi	r30, 0xC0	; 192
     7a2:	f0 e0       	ldi	r31, 0x00	; 0
     7a4:	95 b9       	out	0x05, r25	; 5
     7a6:	80 81       	ld	r24, Z
		USART_Flush(0);
		commTranslate(payload);
	}
	if(USART_IsSendReady(0)){
		USART_Send(data,0);
		while(USART_HasTransmitted(0) == 0){
     7a8:	86 ff       	sbrs	r24, 6
     7aa:	fc cf       	rjmp	.-8      	; 0x7a4 <sendToTarget+0x3a>
			PORTB = 0xFF;
		}
	}
}
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	08 95       	ret

000007b2 <gameOver>:

void gameOver(){
	//Display Score and Game Over Screen
	sendToTarget(0xF1);
     7b2:	81 ef       	ldi	r24, 0xF1	; 241
     7b4:	da df       	rcall	.-76     	; 0x76a <sendToTarget>
	nokia_lcd_clear();
     7b6:	a6 de       	rcall	.-692    	; 0x504 <nokia_lcd_clear>
     7b8:	61 e0       	ldi	r22, 0x01	; 1
	nokia_lcd_write_string("Game Over",1);
     7ba:	80 e1       	ldi	r24, 0x10	; 16
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	88 df       	rcall	.-240    	; 0x6d0 <nokia_lcd_write_string>
	nokia_lcd_render();
     7c0:	99 df       	rcall	.-206    	; 0x6f4 <nokia_lcd_render>
     7c2:	ff cf       	rjmp	.-2      	; 0x7c2 <gameOver+0x10>

000007c4 <shootStateSM>:
     7c4:	1f 93       	push	r17
		//Start Game
		gameStart = 1;
	}
}
enum shootStates {shootStateSM_init, shootStateSM_wait, shootStateSM_shoot, shootStateSM_cooldown, shootStateSM_waitRelease};
int shootStateSM(int shootState){
     7c6:	cf 93       	push	r28
     7c8:	df 93       	push	r29
     7ca:	ec 01       	movw	r28, r24
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
     7cc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
unsigned char payload = 0x00;
if(USART_HasReceived(0)){ //Message Received
     7d0:	88 23       	and	r24, r24
     7d2:	3c f4       	brge	.+14     	; 0x7e2 <shootStateSM+0x1e>
	payload = USART_Receive(0);
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	4b de       	rcall	.-874    	; 0x46e <USART_Receive>
     7d8:	18 2f       	mov	r17, r24
	USART_Flush(0);
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	19 de       	rcall	.-974    	; 0x410 <USART_Flush>
	commTranslate(payload);
     7de:	81 2f       	mov	r24, r17
     7e0:	a0 df       	rcall	.-192    	; 0x722 <commTranslate>
     7e2:	c2 30       	cpi	r28, 0x02	; 2
}
	switch(shootState){
     7e4:	d1 05       	cpc	r29, r1
     7e6:	09 f4       	brne	.+2      	; 0x7ea <shootStateSM+0x26>
     7e8:	3d c0       	rjmp	.+122    	; 0x864 <shootStateSM+0xa0>
     7ea:	34 f4       	brge	.+12     	; 0x7f8 <shootStateSM+0x34>
     7ec:	20 97       	sbiw	r28, 0x00	; 0
     7ee:	61 f0       	breq	.+24     	; 0x808 <shootStateSM+0x44>
     7f0:	c1 30       	cpi	r28, 0x01	; 1
     7f2:	d1 05       	cpc	r29, r1
     7f4:	a9 f0       	breq	.+42     	; 0x820 <shootStateSM+0x5c>
     7f6:	5d c0       	rjmp	.+186    	; 0x8b2 <shootStateSM+0xee>
     7f8:	c3 30       	cpi	r28, 0x03	; 3
     7fa:	d1 05       	cpc	r29, r1
     7fc:	c9 f1       	breq	.+114    	; 0x870 <shootStateSM+0xac>
     7fe:	c4 30       	cpi	r28, 0x04	; 4
     800:	d1 05       	cpc	r29, r1
     802:	09 f4       	brne	.+2      	; 0x806 <shootStateSM+0x42>
     804:	4f c0       	rjmp	.+158    	; 0x8a4 <shootStateSM+0xe0>
     806:	55 c0       	rjmp	.+170    	; 0x8b2 <shootStateSM+0xee>
     808:	91 e0       	ldi	r25, 0x01	; 1
		case shootStateSM_init:
			if(gameStart == 0){
				shootState = shootStateSM_init;
			}
			else{
				shootState = shootStateSM_wait;
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     810:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     814:	23 2b       	or	r18, r19
     816:	09 f4       	brne	.+2      	; 0x81a <shootStateSM+0x56>
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	c9 2f       	mov	r28, r25
     81c:	d8 2f       	mov	r29, r24
     81e:	4e c0       	rjmp	.+156    	; 0x8bc <shootStateSM+0xf8>
     820:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tempC>
			}
			break;
		case shootStateSM_wait:
			if(tempC){
     824:	88 23       	and	r24, r24
     826:	a9 f0       	breq	.+42     	; 0x852 <shootStateSM+0x8e>
     828:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <bulletCount>
				if(bulletCount > 0){
     82c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <bulletCount+0x1>
     830:	00 97       	sbiw	r24, 0x00	; 0
     832:	61 f0       	breq	.+24     	; 0x84c <shootStateSM+0x88>
     834:	01 97       	sbiw	r24, 0x01	; 1
					bulletCount = bulletCount - 1;
     836:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <bulletCount+0x1>
     83a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <bulletCount>
					sendToTarget(bulletCount);
     83e:	95 df       	rcall	.-214    	; 0x76a <sendToTarget>
     840:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <bulletCount>
					shootState = shootStateSM_shoot;
				}
				if(bulletCount == 0){
     844:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <bulletCount+0x1>
     848:	89 2b       	or	r24, r25
					sendToTarget(bulletCount);
     84a:	b1 f5       	brne	.+108    	; 0x8b8 <shootStateSM+0xf4>
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	8d df       	rcall	.-230    	; 0x76a <sendToTarget>
					gameOver();
     850:	b0 df       	rcall	.-160    	; 0x7b2 <gameOver>
     852:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <bulletCount>
				}
			}
			else{
				if(bulletCount == 0){
     856:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <bulletCount+0x1>
     85a:	00 97       	sbiw	r24, 0x00	; 0
					gameOver();
     85c:	09 f4       	brne	.+2      	; 0x860 <shootStateSM+0x9c>
     85e:	a9 df       	rcall	.-174    	; 0x7b2 <gameOver>
				}
				sendToTarget(bulletCount);
     860:	84 df       	rcall	.-248    	; 0x76a <sendToTarget>
     862:	2c c0       	rjmp	.+88     	; 0x8bc <shootStateSM+0xf8>
     864:	81 e0       	ldi	r24, 0x01	; 1
				shootState = shootStateSM_wait;
			}
			break;
		case shootStateSM_shoot:
			tempB = 0x01;
     866:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempB>
     86a:	c3 e0       	ldi	r28, 0x03	; 3
			shootState = shootStateSM_cooldown;
     86c:	d0 e0       	ldi	r29, 0x00	; 0
     86e:	26 c0       	rjmp	.+76     	; 0x8bc <shootStateSM+0xf8>
			break;
     870:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <coolDownCount>
		case shootStateSM_cooldown:
			if(coolDownCount  == 0){
     874:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <coolDownCount+0x1>
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	59 f4       	brne	.+22     	; 0x892 <shootStateSM+0xce>
     87c:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <tempB>
				tempB = 0x00;
     880:	82 e0       	ldi	r24, 0x02	; 2
				coolDownCount = 2;
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <coolDownCount+0x1>
     888:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <coolDownCount>
     88c:	c4 e0       	ldi	r28, 0x04	; 4
				shootState = shootStateSM_waitRelease;
     88e:	d0 e0       	ldi	r29, 0x00	; 0
     890:	15 c0       	rjmp	.+42     	; 0x8bc <shootStateSM+0xf8>
     892:	21 e0       	ldi	r18, 0x01	; 1
			}
			else{
				tempB = 0x01;
     894:	20 93 48 01 	sts	0x0148, r18	; 0x800148 <tempB>
     898:	01 97       	sbiw	r24, 0x01	; 1
				coolDownCount = coolDownCount - 1;
     89a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <coolDownCount+0x1>
     89e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <coolDownCount>
     8a2:	0c c0       	rjmp	.+24     	; 0x8bc <shootStateSM+0xf8>
     8a4:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tempC>
				shootState = shootStateSM_cooldown;
			}
			break;
		case shootStateSM_waitRelease:
			if(tempC == 0x01){
     8a8:	81 30       	cpi	r24, 0x01	; 1
     8aa:	41 f0       	breq	.+16     	; 0x8bc <shootStateSM+0xf8>
     8ac:	c1 e0       	ldi	r28, 0x01	; 1
				shootState = shootStateSM_waitRelease;
			}
			else{
				shootState = shootStateSM_wait;
     8ae:	d0 e0       	ldi	r29, 0x00	; 0
     8b0:	05 c0       	rjmp	.+10     	; 0x8bc <shootStateSM+0xf8>
     8b2:	c0 e0       	ldi	r28, 0x00	; 0
			}
			break;

		default:
			shootState = shootStateSM_init;
     8b4:	d0 e0       	ldi	r29, 0x00	; 0
     8b6:	02 c0       	rjmp	.+4      	; 0x8bc <shootStateSM+0xf8>
     8b8:	c2 e0       	ldi	r28, 0x02	; 2
		case shootStateSM_wait:
			if(tempC){
				if(bulletCount > 0){
					bulletCount = bulletCount - 1;
					sendToTarget(bulletCount);
					shootState = shootStateSM_shoot;
     8ba:	d0 e0       	ldi	r29, 0x00	; 0
     8bc:	ce 01       	movw	r24, r28

		default:
			shootState = shootStateSM_init;
	}
	return shootState;
}
     8be:	df 91       	pop	r29
     8c0:	cf 91       	pop	r28
     8c2:	1f 91       	pop	r17
     8c4:	08 95       	ret

000008c6 <displaySM>:
     8c6:	ef 92       	push	r14

enum displayStates{displaySM_init, displaySM_update};

int displaySM(int displayState){
     8c8:	ff 92       	push	r15
     8ca:	0f 93       	push	r16
     8cc:	1f 93       	push	r17
     8ce:	cf 93       	push	r28
     8d0:	df 93       	push	r29
     8d2:	cd b7       	in	r28, 0x3d	; 61
     8d4:	de b7       	in	r29, 0x3e	; 62
     8d6:	60 97       	sbiw	r28, 0x10	; 16
     8d8:	0f b6       	in	r0, 0x3f	; 63
     8da:	f8 94       	cli
     8dc:	de bf       	out	0x3e, r29	; 62
     8de:	0f be       	out	0x3f, r0	; 63
     8e0:	cd bf       	out	0x3d, r28	; 61
     8e2:	8c 01       	movw	r16, r24
     8e4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	unsigned char payload = 0x00;
	char displayString[16];
	if(USART_HasReceived(0)){ //Message Received
     8e8:	88 23       	and	r24, r24
     8ea:	3c f4       	brge	.+14     	; 0x8fa <displaySM+0x34>
		payload = USART_Receive(0);
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	bf dd       	rcall	.-1154   	; 0x46e <USART_Receive>
     8f0:	f8 2e       	mov	r15, r24
		USART_Flush(0);
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	8d dd       	rcall	.-1254   	; 0x410 <USART_Flush>
		commTranslate(payload);
     8f6:	8f 2d       	mov	r24, r15
     8f8:	14 df       	rcall	.-472    	; 0x722 <commTranslate>
     8fa:	01 15       	cp	r16, r1
	}
	switch(displayState){
     8fc:	11 05       	cpc	r17, r1
     8fe:	21 f0       	breq	.+8      	; 0x908 <displaySM+0x42>
     900:	01 30       	cpi	r16, 0x01	; 1
     902:	11 05       	cpc	r17, r1
     904:	69 f0       	breq	.+26     	; 0x920 <displaySM+0x5a>
     906:	27 c0       	rjmp	.+78     	; 0x956 <displaySM+0x90>
     908:	91 e0       	ldi	r25, 0x01	; 1
		case displaySM_init:
			if(gameStart == 0){
				//display game start screen
			}
			else{
				displayState = displaySM_update;
     90a:	80 e0       	ldi	r24, 0x00	; 0
     90c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     910:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     914:	23 2b       	or	r18, r19
     916:	09 f4       	brne	.+2      	; 0x91a <displaySM+0x54>
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	09 2f       	mov	r16, r25
     91c:	18 2f       	mov	r17, r24
     91e:	1b c0       	rjmp	.+54     	; 0x956 <displaySM+0x90>
     920:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <bulletCount+0x1>
			}
			break;
		case displaySM_update:
			sprintf(displayString,"Bullets: %d",bulletCount);
     924:	8f 93       	push	r24
     926:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <bulletCount>
     92a:	8f 93       	push	r24
     92c:	8a e1       	ldi	r24, 0x1A	; 26
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	9f 93       	push	r25
     932:	8f 93       	push	r24
     934:	ce 01       	movw	r24, r28
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	7c 01       	movw	r14, r24
     93a:	9f 93       	push	r25
     93c:	8f 93       	push	r24
     93e:	e3 d0       	rcall	.+454    	; 0xb06 <sprintf>
			nokia_lcd_clear();
     940:	e1 dd       	rcall	.-1086   	; 0x504 <nokia_lcd_clear>
			nokia_lcd_write_string(displayString,1);
     942:	61 e0       	ldi	r22, 0x01	; 1
     944:	c7 01       	movw	r24, r14
     946:	c4 de       	rcall	.-632    	; 0x6d0 <nokia_lcd_write_string>
     948:	d5 de       	rcall	.-598    	; 0x6f4 <nokia_lcd_render>
			nokia_lcd_render();
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
			displayState = displaySM_update;
			break;
     94e:	0f 90       	pop	r0
     950:	0f 90       	pop	r0
     952:	0f 90       	pop	r0
     954:	0f 90       	pop	r0
     956:	c8 01       	movw	r24, r16
     958:	60 96       	adiw	r28, 0x10	; 16
	}
	return displayState;
}
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	f8 94       	cli
     95e:	de bf       	out	0x3e, r29	; 62
     960:	0f be       	out	0x3f, r0	; 63
     962:	cd bf       	out	0x3d, r28	; 61
     964:	df 91       	pop	r29
     966:	cf 91       	pop	r28
     968:	1f 91       	pop	r17
     96a:	0f 91       	pop	r16
     96c:	ff 90       	pop	r15
     96e:	ef 90       	pop	r14
     970:	08 95       	ret

00000972 <commStateSM>:
     972:	1f 93       	push	r17
     974:	cf 93       	push	r28

//commStates are in charge of communication from target
enum commStates{commStateSM_init, commStateSM_loop};

int commStateSM(int commState){
     976:	df 93       	push	r29
     978:	ec 01       	movw	r28, r24
	unsigned char payload = 0x00;
	switch(commState){
     97a:	00 97       	sbiw	r24, 0x00	; 0
     97c:	19 f0       	breq	.+6      	; 0x984 <commStateSM+0x12>
     97e:	01 97       	sbiw	r24, 0x01	; 1
     980:	21 f0       	breq	.+8      	; 0x98a <commStateSM+0x18>
     982:	0e c0       	rjmp	.+28     	; 0x9a0 <commStateSM+0x2e>
		case commStateSM_init:
			commState = commStateSM_loop;
     984:	c1 e0       	ldi	r28, 0x01	; 1
     986:	d0 e0       	ldi	r29, 0x00	; 0
     988:	0b c0       	rjmp	.+22     	; 0x9a0 <commStateSM+0x2e>
     98a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
			break;

		case commStateSM_loop:
			if(USART_HasReceived(0)){ //Message Received
     98e:	88 23       	and	r24, r24
     990:	3c f4       	brge	.+14     	; 0x9a0 <commStateSM+0x2e>
				payload = USART_Receive(0);
     992:	80 e0       	ldi	r24, 0x00	; 0
     994:	6c dd       	rcall	.-1320   	; 0x46e <USART_Receive>
     996:	18 2f       	mov	r17, r24
				USART_Flush(0);
     998:	80 e0       	ldi	r24, 0x00	; 0
     99a:	3a dd       	rcall	.-1420   	; 0x410 <USART_Flush>
				commTranslate(payload);
     99c:	81 2f       	mov	r24, r17
     99e:	c1 de       	rcall	.-638    	; 0x722 <commTranslate>
     9a0:	ce 01       	movw	r24, r28
			}
			commState = commStateSM_loop;
			break;
	}
	return commState;
}
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	08 95       	ret

000009aa <main>:
     9aa:	cf 93       	push	r28

int main(void)
{
     9ac:	df 93       	push	r29
     9ae:	00 d0       	rcall	.+0      	; 0x9b0 <main+0x6>
     9b0:	00 d0       	rcall	.+0      	; 0x9b2 <main+0x8>
     9b2:	00 d0       	rcall	.+0      	; 0x9b4 <main+0xa>
     9b4:	cd b7       	in	r28, 0x3d	; 61
     9b6:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0xFF; PORTB = 0x00;
     9b8:	8f ef       	ldi	r24, 0xFF	; 255
     9ba:	84 b9       	out	0x04, r24	; 4
     9bc:	15 b8       	out	0x05, r1	; 5
	//PORTC FOR Nokia 5110 LCD
	DDRC = 0x00; PORTC = 0xFF;
     9be:	17 b8       	out	0x07, r1	; 7
     9c0:	88 b9       	out	0x08, r24	; 8
	DDRA = 0x00; PORTA = 0xFF;
     9c2:	11 b8       	out	0x01, r1	; 1
     9c4:	82 b9       	out	0x02, r24	; 2
	initUSART(0);
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	01 dd       	rcall	.-1534   	; 0x3cc <initUSART>
	nokia_lcd_init();
     9ca:	63 dd       	rcall	.-1338   	; 0x492 <nokia_lcd_init>
	nokia_lcd_clear();
     9cc:	9b dd       	rcall	.-1226   	; 0x504 <nokia_lcd_clear>
	USART_Flush(0);
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	1f dd       	rcall	.-1474   	; 0x410 <USART_Flush>
     9d2:	86 e0       	ldi	r24, 0x06	; 6
	static task task1;
	static task task2;
	static task task3;

	task *tasks[] = {&task1,&task2,&task3};
     9d4:	ea e0       	ldi	r30, 0x0A	; 10
     9d6:	f1 e0       	ldi	r31, 0x01	; 1
     9d8:	de 01       	movw	r26, r28
     9da:	11 96       	adiw	r26, 0x01	; 1
     9dc:	01 90       	ld	r0, Z+
     9de:	0d 92       	st	X+, r0
     9e0:	8a 95       	dec	r24
     9e2:	e1 f7       	brne	.-8      	; 0x9dc <main+0x32>
     9e4:	ec e3       	ldi	r30, 0x3C	; 60
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	task1.state = commStateSM_init;
     9e6:	f1 e0       	ldi	r31, 0x01	; 1
     9e8:	10 82       	st	Z, r1
     9ea:	82 e3       	ldi	r24, 0x32	; 50
	task1.period = 50;
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	81 83       	std	Z+1, r24	; 0x01
     9f4:	92 83       	std	Z+2, r25	; 0x02
     9f6:	a3 83       	std	Z+3, r26	; 0x03
     9f8:	b4 83       	std	Z+4, r27	; 0x04
     9fa:	85 83       	std	Z+5, r24	; 0x05
	task1.elapsedTime = task1.period;
     9fc:	96 83       	std	Z+6, r25	; 0x06
     9fe:	a7 83       	std	Z+7, r26	; 0x07
     a00:	b0 87       	std	Z+8, r27	; 0x08
     a02:	29 eb       	ldi	r18, 0xB9	; 185
	task1.TickFct = &commStateSM;
     a04:	34 e0       	ldi	r19, 0x04	; 4
     a06:	32 87       	std	Z+10, r19	; 0x0a
     a08:	21 87       	std	Z+9, r18	; 0x09
     a0a:	e1 e3       	ldi	r30, 0x31	; 49

	task2.state = shootStateSM_init;
     a0c:	f1 e0       	ldi	r31, 0x01	; 1
     a0e:	10 82       	st	Z, r1
     a10:	44 e6       	ldi	r20, 0x64	; 100
	task2.period = 100;
     a12:	50 e0       	ldi	r21, 0x00	; 0
     a14:	60 e0       	ldi	r22, 0x00	; 0
     a16:	70 e0       	ldi	r23, 0x00	; 0
     a18:	41 83       	std	Z+1, r20	; 0x01
     a1a:	52 83       	std	Z+2, r21	; 0x02
     a1c:	63 83       	std	Z+3, r22	; 0x03
     a1e:	74 83       	std	Z+4, r23	; 0x04
     a20:	45 83       	std	Z+5, r20	; 0x05
	task2.elapsedTime = task2.period;
     a22:	56 83       	std	Z+6, r21	; 0x06
     a24:	67 83       	std	Z+7, r22	; 0x07
     a26:	70 87       	std	Z+8, r23	; 0x08
     a28:	22 ee       	ldi	r18, 0xE2	; 226
	task2.TickFct = &shootStateSM;
     a2a:	33 e0       	ldi	r19, 0x03	; 3
     a2c:	32 87       	std	Z+10, r19	; 0x0a
     a2e:	21 87       	std	Z+9, r18	; 0x09
     a30:	e6 e2       	ldi	r30, 0x26	; 38

	task3.state = displaySM_init;
     a32:	f1 e0       	ldi	r31, 0x01	; 1
     a34:	10 82       	st	Z, r1
     a36:	81 83       	std	Z+1, r24	; 0x01
	task3.period = 50;
     a38:	92 83       	std	Z+2, r25	; 0x02
     a3a:	a3 83       	std	Z+3, r26	; 0x03
     a3c:	b4 83       	std	Z+4, r27	; 0x04
     a3e:	85 83       	std	Z+5, r24	; 0x05
	task3.elapsedTime = task3.period;
     a40:	96 83       	std	Z+6, r25	; 0x06
     a42:	a7 83       	std	Z+7, r26	; 0x07
     a44:	b0 87       	std	Z+8, r27	; 0x08
     a46:	83 e6       	ldi	r24, 0x63	; 99
	task3.TickFct = &displaySM;
     a48:	94 e0       	ldi	r25, 0x04	; 4
     a4a:	92 87       	std	Z+10, r25	; 0x0a
     a4c:	81 87       	std	Z+9, r24	; 0x09
     a4e:	62 e3       	ldi	r22, 0x32	; 50
	
	TimerSet(50);
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	49 dc       	rcall	.-1902   	; 0x2ea <TimerSet>
	TimerOn();
     a58:	59 dc       	rcall	.-1870   	; 0x30c <TimerOn>
     a5a:	7e 01       	movw	r14, r28
     a5c:	87 e0       	ldi	r24, 0x07	; 7
     a5e:	e8 0e       	add	r14, r24
     a60:	f1 1c       	adc	r15, r1
     a62:	86 b1       	in	r24, 0x06	; 6
	unsigned int i;
	//====End of Task Scheduler Setup====
	while (1)
	{
		tempC = PINC & 0x01;
     a64:	81 70       	andi	r24, 0x01	; 1
     a66:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <tempC>
     a6a:	de 01       	movw	r26, r28
     a6c:	11 96       	adiw	r26, 0x01	; 1
     a6e:	6d 01       	movw	r12, r26
     a70:	f6 01       	movw	r30, r12
		for( i = 0; i < numTasks; i++){
			if(tasks[i]->elapsedTime == tasks[i]->period){
     a72:	01 91       	ld	r16, Z+
     a74:	11 91       	ld	r17, Z+
     a76:	6f 01       	movw	r12, r30
     a78:	d8 01       	movw	r26, r16
     a7a:	15 96       	adiw	r26, 0x05	; 5
     a7c:	4d 91       	ld	r20, X+
     a7e:	5d 91       	ld	r21, X+
     a80:	6d 91       	ld	r22, X+
     a82:	7c 91       	ld	r23, X
     a84:	18 97       	sbiw	r26, 0x08	; 8
     a86:	11 96       	adiw	r26, 0x01	; 1
     a88:	8d 91       	ld	r24, X+
     a8a:	9d 91       	ld	r25, X+
     a8c:	0d 90       	ld	r0, X+
     a8e:	bc 91       	ld	r27, X
     a90:	a0 2d       	mov	r26, r0
     a92:	48 17       	cp	r20, r24
     a94:	59 07       	cpc	r21, r25
     a96:	6a 07       	cpc	r22, r26
     a98:	7b 07       	cpc	r23, r27
     a9a:	81 f4       	brne	.+32     	; 0xabc <main+0x112>
     a9c:	f8 01       	movw	r30, r16
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
     a9e:	80 81       	ld	r24, Z
     aa0:	01 84       	ldd	r0, Z+9	; 0x09
     aa2:	f2 85       	ldd	r31, Z+10	; 0x0a
     aa4:	e0 2d       	mov	r30, r0
     aa6:	08 2e       	mov	r0, r24
     aa8:	00 0c       	add	r0, r0
     aaa:	99 0b       	sbc	r25, r25
     aac:	09 95       	icall
     aae:	d8 01       	movw	r26, r16
     ab0:	8c 93       	st	X, r24
     ab2:	f8 01       	movw	r30, r16
				tasks[i]->elapsedTime = 0;
     ab4:	15 82       	std	Z+5, r1	; 0x05
     ab6:	16 82       	std	Z+6, r1	; 0x06
     ab8:	17 82       	std	Z+7, r1	; 0x07
     aba:	10 86       	std	Z+8, r1	; 0x08
     abc:	f8 01       	movw	r30, r16
			}
			tasks[i] ->elapsedTime += 50;
     abe:	85 81       	ldd	r24, Z+5	; 0x05
     ac0:	96 81       	ldd	r25, Z+6	; 0x06
     ac2:	a7 81       	ldd	r26, Z+7	; 0x07
     ac4:	b0 85       	ldd	r27, Z+8	; 0x08
     ac6:	c2 96       	adiw	r24, 0x32	; 50
     ac8:	a1 1d       	adc	r26, r1
     aca:	b1 1d       	adc	r27, r1
     acc:	85 83       	std	Z+5, r24	; 0x05
     ace:	96 83       	std	Z+6, r25	; 0x06
     ad0:	a7 83       	std	Z+7, r26	; 0x07
     ad2:	b0 87       	std	Z+8, r27	; 0x08
     ad4:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempB>
			PORTB = tempB;
     ad8:	85 b9       	out	0x05, r24	; 5
     ada:	ce 14       	cp	r12, r14
	unsigned int i;
	//====End of Task Scheduler Setup====
	while (1)
	{
		tempC = PINC & 0x01;
		for( i = 0; i < numTasks; i++){
     adc:	df 04       	cpc	r13, r15
     ade:	41 f6       	brne	.-112    	; 0xa70 <main+0xc6>
     ae0:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <TimerFlag>
				tasks[i]->elapsedTime = 0;
			}
			tasks[i] ->elapsedTime += 50;
			PORTB = tempB;
		}
	while(!TimerFlag);
     ae4:	88 23       	and	r24, r24
     ae6:	e1 f3       	breq	.-8      	; 0xae0 <main+0x136>
     ae8:	10 92 47 03 	sts	0x0347, r1	; 0x800347 <TimerFlag>
	TimerFlag = 0;
     aec:	ba cf       	rjmp	.-140    	; 0xa62 <main+0xb8>

00000aee <__udivmodqi4>:
	}
     aee:	99 1b       	sub	r25, r25
     af0:	79 e0       	ldi	r23, 0x09	; 9
     af2:	04 c0       	rjmp	.+8      	; 0xafc <__udivmodqi4_ep>

00000af4 <__udivmodqi4_loop>:
     af4:	99 1f       	adc	r25, r25
     af6:	96 17       	cp	r25, r22
     af8:	08 f0       	brcs	.+2      	; 0xafc <__udivmodqi4_ep>
     afa:	96 1b       	sub	r25, r22

00000afc <__udivmodqi4_ep>:
     afc:	88 1f       	adc	r24, r24
     afe:	7a 95       	dec	r23
     b00:	c9 f7       	brne	.-14     	; 0xaf4 <__udivmodqi4_loop>
     b02:	80 95       	com	r24
     b04:	08 95       	ret

00000b06 <sprintf>:
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
     b0e:	cd b7       	in	r28, 0x3d	; 61
     b10:	de b7       	in	r29, 0x3e	; 62
     b12:	2e 97       	sbiw	r28, 0x0e	; 14
     b14:	0f b6       	in	r0, 0x3f	; 63
     b16:	f8 94       	cli
     b18:	de bf       	out	0x3e, r29	; 62
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	cd bf       	out	0x3d, r28	; 61
     b1e:	0d 89       	ldd	r16, Y+21	; 0x15
     b20:	1e 89       	ldd	r17, Y+22	; 0x16
     b22:	86 e0       	ldi	r24, 0x06	; 6
     b24:	8c 83       	std	Y+4, r24	; 0x04
     b26:	1a 83       	std	Y+2, r17	; 0x02
     b28:	09 83       	std	Y+1, r16	; 0x01
     b2a:	8f ef       	ldi	r24, 0xFF	; 255
     b2c:	9f e7       	ldi	r25, 0x7F	; 127
     b2e:	9e 83       	std	Y+6, r25	; 0x06
     b30:	8d 83       	std	Y+5, r24	; 0x05
     b32:	ae 01       	movw	r20, r28
     b34:	47 5e       	subi	r20, 0xE7	; 231
     b36:	5f 4f       	sbci	r21, 0xFF	; 255
     b38:	6f 89       	ldd	r22, Y+23	; 0x17
     b3a:	78 8d       	ldd	r23, Y+24	; 0x18
     b3c:	ce 01       	movw	r24, r28
     b3e:	01 96       	adiw	r24, 0x01	; 1
     b40:	10 d0       	rcall	.+32     	; 0xb62 <vfprintf>
     b42:	ef 81       	ldd	r30, Y+7	; 0x07
     b44:	f8 85       	ldd	r31, Y+8	; 0x08
     b46:	e0 0f       	add	r30, r16
     b48:	f1 1f       	adc	r31, r17
     b4a:	10 82       	st	Z, r1
     b4c:	2e 96       	adiw	r28, 0x0e	; 14
     b4e:	0f b6       	in	r0, 0x3f	; 63
     b50:	f8 94       	cli
     b52:	de bf       	out	0x3e, r29	; 62
     b54:	0f be       	out	0x3f, r0	; 63
     b56:	cd bf       	out	0x3d, r28	; 61
     b58:	df 91       	pop	r29
     b5a:	cf 91       	pop	r28
     b5c:	1f 91       	pop	r17
     b5e:	0f 91       	pop	r16
     b60:	08 95       	ret

00000b62 <vfprintf>:
     b62:	2f 92       	push	r2
     b64:	3f 92       	push	r3
     b66:	4f 92       	push	r4
     b68:	5f 92       	push	r5
     b6a:	6f 92       	push	r6
     b6c:	7f 92       	push	r7
     b6e:	8f 92       	push	r8
     b70:	9f 92       	push	r9
     b72:	af 92       	push	r10
     b74:	bf 92       	push	r11
     b76:	cf 92       	push	r12
     b78:	df 92       	push	r13
     b7a:	ef 92       	push	r14
     b7c:	ff 92       	push	r15
     b7e:	0f 93       	push	r16
     b80:	1f 93       	push	r17
     b82:	cf 93       	push	r28
     b84:	df 93       	push	r29
     b86:	cd b7       	in	r28, 0x3d	; 61
     b88:	de b7       	in	r29, 0x3e	; 62
     b8a:	2b 97       	sbiw	r28, 0x0b	; 11
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	f8 94       	cli
     b90:	de bf       	out	0x3e, r29	; 62
     b92:	0f be       	out	0x3f, r0	; 63
     b94:	cd bf       	out	0x3d, r28	; 61
     b96:	6c 01       	movw	r12, r24
     b98:	7b 01       	movw	r14, r22
     b9a:	8a 01       	movw	r16, r20
     b9c:	fc 01       	movw	r30, r24
     b9e:	17 82       	std	Z+7, r1	; 0x07
     ba0:	16 82       	std	Z+6, r1	; 0x06
     ba2:	83 81       	ldd	r24, Z+3	; 0x03
     ba4:	81 ff       	sbrs	r24, 1
     ba6:	bf c1       	rjmp	.+894    	; 0xf26 <vfprintf+0x3c4>
     ba8:	ce 01       	movw	r24, r28
     baa:	01 96       	adiw	r24, 0x01	; 1
     bac:	3c 01       	movw	r6, r24
     bae:	f6 01       	movw	r30, r12
     bb0:	93 81       	ldd	r25, Z+3	; 0x03
     bb2:	f7 01       	movw	r30, r14
     bb4:	93 fd       	sbrc	r25, 3
     bb6:	85 91       	lpm	r24, Z+
     bb8:	93 ff       	sbrs	r25, 3
     bba:	81 91       	ld	r24, Z+
     bbc:	7f 01       	movw	r14, r30
     bbe:	88 23       	and	r24, r24
     bc0:	09 f4       	brne	.+2      	; 0xbc4 <vfprintf+0x62>
     bc2:	ad c1       	rjmp	.+858    	; 0xf1e <vfprintf+0x3bc>
     bc4:	85 32       	cpi	r24, 0x25	; 37
     bc6:	39 f4       	brne	.+14     	; 0xbd6 <vfprintf+0x74>
     bc8:	93 fd       	sbrc	r25, 3
     bca:	85 91       	lpm	r24, Z+
     bcc:	93 ff       	sbrs	r25, 3
     bce:	81 91       	ld	r24, Z+
     bd0:	7f 01       	movw	r14, r30
     bd2:	85 32       	cpi	r24, 0x25	; 37
     bd4:	21 f4       	brne	.+8      	; 0xbde <vfprintf+0x7c>
     bd6:	b6 01       	movw	r22, r12
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	d6 d1       	rcall	.+940    	; 0xf88 <fputc>
     bdc:	e8 cf       	rjmp	.-48     	; 0xbae <vfprintf+0x4c>
     bde:	91 2c       	mov	r9, r1
     be0:	21 2c       	mov	r2, r1
     be2:	31 2c       	mov	r3, r1
     be4:	ff e1       	ldi	r31, 0x1F	; 31
     be6:	f3 15       	cp	r31, r3
     be8:	d8 f0       	brcs	.+54     	; 0xc20 <vfprintf+0xbe>
     bea:	8b 32       	cpi	r24, 0x2B	; 43
     bec:	79 f0       	breq	.+30     	; 0xc0c <vfprintf+0xaa>
     bee:	38 f4       	brcc	.+14     	; 0xbfe <vfprintf+0x9c>
     bf0:	80 32       	cpi	r24, 0x20	; 32
     bf2:	79 f0       	breq	.+30     	; 0xc12 <vfprintf+0xb0>
     bf4:	83 32       	cpi	r24, 0x23	; 35
     bf6:	a1 f4       	brne	.+40     	; 0xc20 <vfprintf+0xbe>
     bf8:	23 2d       	mov	r18, r3
     bfa:	20 61       	ori	r18, 0x10	; 16
     bfc:	1d c0       	rjmp	.+58     	; 0xc38 <vfprintf+0xd6>
     bfe:	8d 32       	cpi	r24, 0x2D	; 45
     c00:	61 f0       	breq	.+24     	; 0xc1a <vfprintf+0xb8>
     c02:	80 33       	cpi	r24, 0x30	; 48
     c04:	69 f4       	brne	.+26     	; 0xc20 <vfprintf+0xbe>
     c06:	23 2d       	mov	r18, r3
     c08:	21 60       	ori	r18, 0x01	; 1
     c0a:	16 c0       	rjmp	.+44     	; 0xc38 <vfprintf+0xd6>
     c0c:	83 2d       	mov	r24, r3
     c0e:	82 60       	ori	r24, 0x02	; 2
     c10:	38 2e       	mov	r3, r24
     c12:	e3 2d       	mov	r30, r3
     c14:	e4 60       	ori	r30, 0x04	; 4
     c16:	3e 2e       	mov	r3, r30
     c18:	2a c0       	rjmp	.+84     	; 0xc6e <vfprintf+0x10c>
     c1a:	f3 2d       	mov	r31, r3
     c1c:	f8 60       	ori	r31, 0x08	; 8
     c1e:	1d c0       	rjmp	.+58     	; 0xc5a <vfprintf+0xf8>
     c20:	37 fc       	sbrc	r3, 7
     c22:	2d c0       	rjmp	.+90     	; 0xc7e <vfprintf+0x11c>
     c24:	20 ed       	ldi	r18, 0xD0	; 208
     c26:	28 0f       	add	r18, r24
     c28:	2a 30       	cpi	r18, 0x0A	; 10
     c2a:	40 f0       	brcs	.+16     	; 0xc3c <vfprintf+0xda>
     c2c:	8e 32       	cpi	r24, 0x2E	; 46
     c2e:	b9 f4       	brne	.+46     	; 0xc5e <vfprintf+0xfc>
     c30:	36 fc       	sbrc	r3, 6
     c32:	75 c1       	rjmp	.+746    	; 0xf1e <vfprintf+0x3bc>
     c34:	23 2d       	mov	r18, r3
     c36:	20 64       	ori	r18, 0x40	; 64
     c38:	32 2e       	mov	r3, r18
     c3a:	19 c0       	rjmp	.+50     	; 0xc6e <vfprintf+0x10c>
     c3c:	36 fe       	sbrs	r3, 6
     c3e:	06 c0       	rjmp	.+12     	; 0xc4c <vfprintf+0xea>
     c40:	8a e0       	ldi	r24, 0x0A	; 10
     c42:	98 9e       	mul	r9, r24
     c44:	20 0d       	add	r18, r0
     c46:	11 24       	eor	r1, r1
     c48:	92 2e       	mov	r9, r18
     c4a:	11 c0       	rjmp	.+34     	; 0xc6e <vfprintf+0x10c>
     c4c:	ea e0       	ldi	r30, 0x0A	; 10
     c4e:	2e 9e       	mul	r2, r30
     c50:	20 0d       	add	r18, r0
     c52:	11 24       	eor	r1, r1
     c54:	22 2e       	mov	r2, r18
     c56:	f3 2d       	mov	r31, r3
     c58:	f0 62       	ori	r31, 0x20	; 32
     c5a:	3f 2e       	mov	r3, r31
     c5c:	08 c0       	rjmp	.+16     	; 0xc6e <vfprintf+0x10c>
     c5e:	8c 36       	cpi	r24, 0x6C	; 108
     c60:	21 f4       	brne	.+8      	; 0xc6a <vfprintf+0x108>
     c62:	83 2d       	mov	r24, r3
     c64:	80 68       	ori	r24, 0x80	; 128
     c66:	38 2e       	mov	r3, r24
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <vfprintf+0x10c>
     c6a:	88 36       	cpi	r24, 0x68	; 104
     c6c:	41 f4       	brne	.+16     	; 0xc7e <vfprintf+0x11c>
     c6e:	f7 01       	movw	r30, r14
     c70:	93 fd       	sbrc	r25, 3
     c72:	85 91       	lpm	r24, Z+
     c74:	93 ff       	sbrs	r25, 3
     c76:	81 91       	ld	r24, Z+
     c78:	7f 01       	movw	r14, r30
     c7a:	81 11       	cpse	r24, r1
     c7c:	b3 cf       	rjmp	.-154    	; 0xbe4 <vfprintf+0x82>
     c7e:	98 2f       	mov	r25, r24
     c80:	9f 7d       	andi	r25, 0xDF	; 223
     c82:	95 54       	subi	r25, 0x45	; 69
     c84:	93 30       	cpi	r25, 0x03	; 3
     c86:	28 f4       	brcc	.+10     	; 0xc92 <vfprintf+0x130>
     c88:	0c 5f       	subi	r16, 0xFC	; 252
     c8a:	1f 4f       	sbci	r17, 0xFF	; 255
     c8c:	9f e3       	ldi	r25, 0x3F	; 63
     c8e:	99 83       	std	Y+1, r25	; 0x01
     c90:	0d c0       	rjmp	.+26     	; 0xcac <vfprintf+0x14a>
     c92:	83 36       	cpi	r24, 0x63	; 99
     c94:	31 f0       	breq	.+12     	; 0xca2 <vfprintf+0x140>
     c96:	83 37       	cpi	r24, 0x73	; 115
     c98:	71 f0       	breq	.+28     	; 0xcb6 <vfprintf+0x154>
     c9a:	83 35       	cpi	r24, 0x53	; 83
     c9c:	09 f0       	breq	.+2      	; 0xca0 <vfprintf+0x13e>
     c9e:	55 c0       	rjmp	.+170    	; 0xd4a <vfprintf+0x1e8>
     ca0:	20 c0       	rjmp	.+64     	; 0xce2 <vfprintf+0x180>
     ca2:	f8 01       	movw	r30, r16
     ca4:	80 81       	ld	r24, Z
     ca6:	89 83       	std	Y+1, r24	; 0x01
     ca8:	0e 5f       	subi	r16, 0xFE	; 254
     caa:	1f 4f       	sbci	r17, 0xFF	; 255
     cac:	88 24       	eor	r8, r8
     cae:	83 94       	inc	r8
     cb0:	91 2c       	mov	r9, r1
     cb2:	53 01       	movw	r10, r6
     cb4:	12 c0       	rjmp	.+36     	; 0xcda <vfprintf+0x178>
     cb6:	28 01       	movw	r4, r16
     cb8:	f2 e0       	ldi	r31, 0x02	; 2
     cba:	4f 0e       	add	r4, r31
     cbc:	51 1c       	adc	r5, r1
     cbe:	f8 01       	movw	r30, r16
     cc0:	a0 80       	ld	r10, Z
     cc2:	b1 80       	ldd	r11, Z+1	; 0x01
     cc4:	36 fe       	sbrs	r3, 6
     cc6:	03 c0       	rjmp	.+6      	; 0xcce <vfprintf+0x16c>
     cc8:	69 2d       	mov	r22, r9
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <vfprintf+0x170>
     cce:	6f ef       	ldi	r22, 0xFF	; 255
     cd0:	7f ef       	ldi	r23, 0xFF	; 255
     cd2:	c5 01       	movw	r24, r10
     cd4:	4e d1       	rcall	.+668    	; 0xf72 <strnlen>
     cd6:	4c 01       	movw	r8, r24
     cd8:	82 01       	movw	r16, r4
     cda:	f3 2d       	mov	r31, r3
     cdc:	ff 77       	andi	r31, 0x7F	; 127
     cde:	3f 2e       	mov	r3, r31
     ce0:	15 c0       	rjmp	.+42     	; 0xd0c <vfprintf+0x1aa>
     ce2:	28 01       	movw	r4, r16
     ce4:	22 e0       	ldi	r18, 0x02	; 2
     ce6:	42 0e       	add	r4, r18
     ce8:	51 1c       	adc	r5, r1
     cea:	f8 01       	movw	r30, r16
     cec:	a0 80       	ld	r10, Z
     cee:	b1 80       	ldd	r11, Z+1	; 0x01
     cf0:	36 fe       	sbrs	r3, 6
     cf2:	03 c0       	rjmp	.+6      	; 0xcfa <vfprintf+0x198>
     cf4:	69 2d       	mov	r22, r9
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	02 c0       	rjmp	.+4      	; 0xcfe <vfprintf+0x19c>
     cfa:	6f ef       	ldi	r22, 0xFF	; 255
     cfc:	7f ef       	ldi	r23, 0xFF	; 255
     cfe:	c5 01       	movw	r24, r10
     d00:	2d d1       	rcall	.+602    	; 0xf5c <strnlen_P>
     d02:	4c 01       	movw	r8, r24
     d04:	f3 2d       	mov	r31, r3
     d06:	f0 68       	ori	r31, 0x80	; 128
     d08:	3f 2e       	mov	r3, r31
     d0a:	82 01       	movw	r16, r4
     d0c:	33 fc       	sbrc	r3, 3
     d0e:	19 c0       	rjmp	.+50     	; 0xd42 <vfprintf+0x1e0>
     d10:	82 2d       	mov	r24, r2
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	88 16       	cp	r8, r24
     d16:	99 06       	cpc	r9, r25
     d18:	a0 f4       	brcc	.+40     	; 0xd42 <vfprintf+0x1e0>
     d1a:	b6 01       	movw	r22, r12
     d1c:	80 e2       	ldi	r24, 0x20	; 32
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	33 d1       	rcall	.+614    	; 0xf88 <fputc>
     d22:	2a 94       	dec	r2
     d24:	f5 cf       	rjmp	.-22     	; 0xd10 <vfprintf+0x1ae>
     d26:	f5 01       	movw	r30, r10
     d28:	37 fc       	sbrc	r3, 7
     d2a:	85 91       	lpm	r24, Z+
     d2c:	37 fe       	sbrs	r3, 7
     d2e:	81 91       	ld	r24, Z+
     d30:	5f 01       	movw	r10, r30
     d32:	b6 01       	movw	r22, r12
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	28 d1       	rcall	.+592    	; 0xf88 <fputc>
     d38:	21 10       	cpse	r2, r1
     d3a:	2a 94       	dec	r2
     d3c:	21 e0       	ldi	r18, 0x01	; 1
     d3e:	82 1a       	sub	r8, r18
     d40:	91 08       	sbc	r9, r1
     d42:	81 14       	cp	r8, r1
     d44:	91 04       	cpc	r9, r1
     d46:	79 f7       	brne	.-34     	; 0xd26 <vfprintf+0x1c4>
     d48:	e1 c0       	rjmp	.+450    	; 0xf0c <vfprintf+0x3aa>
     d4a:	84 36       	cpi	r24, 0x64	; 100
     d4c:	11 f0       	breq	.+4      	; 0xd52 <vfprintf+0x1f0>
     d4e:	89 36       	cpi	r24, 0x69	; 105
     d50:	39 f5       	brne	.+78     	; 0xda0 <vfprintf+0x23e>
     d52:	f8 01       	movw	r30, r16
     d54:	37 fe       	sbrs	r3, 7
     d56:	07 c0       	rjmp	.+14     	; 0xd66 <vfprintf+0x204>
     d58:	60 81       	ld	r22, Z
     d5a:	71 81       	ldd	r23, Z+1	; 0x01
     d5c:	82 81       	ldd	r24, Z+2	; 0x02
     d5e:	93 81       	ldd	r25, Z+3	; 0x03
     d60:	0c 5f       	subi	r16, 0xFC	; 252
     d62:	1f 4f       	sbci	r17, 0xFF	; 255
     d64:	08 c0       	rjmp	.+16     	; 0xd76 <vfprintf+0x214>
     d66:	60 81       	ld	r22, Z
     d68:	71 81       	ldd	r23, Z+1	; 0x01
     d6a:	07 2e       	mov	r0, r23
     d6c:	00 0c       	add	r0, r0
     d6e:	88 0b       	sbc	r24, r24
     d70:	99 0b       	sbc	r25, r25
     d72:	0e 5f       	subi	r16, 0xFE	; 254
     d74:	1f 4f       	sbci	r17, 0xFF	; 255
     d76:	f3 2d       	mov	r31, r3
     d78:	ff 76       	andi	r31, 0x6F	; 111
     d7a:	3f 2e       	mov	r3, r31
     d7c:	97 ff       	sbrs	r25, 7
     d7e:	09 c0       	rjmp	.+18     	; 0xd92 <vfprintf+0x230>
     d80:	90 95       	com	r25
     d82:	80 95       	com	r24
     d84:	70 95       	com	r23
     d86:	61 95       	neg	r22
     d88:	7f 4f       	sbci	r23, 0xFF	; 255
     d8a:	8f 4f       	sbci	r24, 0xFF	; 255
     d8c:	9f 4f       	sbci	r25, 0xFF	; 255
     d8e:	f0 68       	ori	r31, 0x80	; 128
     d90:	3f 2e       	mov	r3, r31
     d92:	2a e0       	ldi	r18, 0x0A	; 10
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	a3 01       	movw	r20, r6
     d98:	33 d1       	rcall	.+614    	; 0x1000 <__ultoa_invert>
     d9a:	88 2e       	mov	r8, r24
     d9c:	86 18       	sub	r8, r6
     d9e:	44 c0       	rjmp	.+136    	; 0xe28 <vfprintf+0x2c6>
     da0:	85 37       	cpi	r24, 0x75	; 117
     da2:	31 f4       	brne	.+12     	; 0xdb0 <vfprintf+0x24e>
     da4:	23 2d       	mov	r18, r3
     da6:	2f 7e       	andi	r18, 0xEF	; 239
     da8:	b2 2e       	mov	r11, r18
     daa:	2a e0       	ldi	r18, 0x0A	; 10
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	25 c0       	rjmp	.+74     	; 0xdfa <vfprintf+0x298>
     db0:	93 2d       	mov	r25, r3
     db2:	99 7f       	andi	r25, 0xF9	; 249
     db4:	b9 2e       	mov	r11, r25
     db6:	8f 36       	cpi	r24, 0x6F	; 111
     db8:	c1 f0       	breq	.+48     	; 0xdea <vfprintf+0x288>
     dba:	18 f4       	brcc	.+6      	; 0xdc2 <vfprintf+0x260>
     dbc:	88 35       	cpi	r24, 0x58	; 88
     dbe:	79 f0       	breq	.+30     	; 0xdde <vfprintf+0x27c>
     dc0:	ae c0       	rjmp	.+348    	; 0xf1e <vfprintf+0x3bc>
     dc2:	80 37       	cpi	r24, 0x70	; 112
     dc4:	19 f0       	breq	.+6      	; 0xdcc <vfprintf+0x26a>
     dc6:	88 37       	cpi	r24, 0x78	; 120
     dc8:	21 f0       	breq	.+8      	; 0xdd2 <vfprintf+0x270>
     dca:	a9 c0       	rjmp	.+338    	; 0xf1e <vfprintf+0x3bc>
     dcc:	e9 2f       	mov	r30, r25
     dce:	e0 61       	ori	r30, 0x10	; 16
     dd0:	be 2e       	mov	r11, r30
     dd2:	b4 fe       	sbrs	r11, 4
     dd4:	0d c0       	rjmp	.+26     	; 0xdf0 <vfprintf+0x28e>
     dd6:	fb 2d       	mov	r31, r11
     dd8:	f4 60       	ori	r31, 0x04	; 4
     dda:	bf 2e       	mov	r11, r31
     ddc:	09 c0       	rjmp	.+18     	; 0xdf0 <vfprintf+0x28e>
     dde:	34 fe       	sbrs	r3, 4
     de0:	0a c0       	rjmp	.+20     	; 0xdf6 <vfprintf+0x294>
     de2:	29 2f       	mov	r18, r25
     de4:	26 60       	ori	r18, 0x06	; 6
     de6:	b2 2e       	mov	r11, r18
     de8:	06 c0       	rjmp	.+12     	; 0xdf6 <vfprintf+0x294>
     dea:	28 e0       	ldi	r18, 0x08	; 8
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	05 c0       	rjmp	.+10     	; 0xdfa <vfprintf+0x298>
     df0:	20 e1       	ldi	r18, 0x10	; 16
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <vfprintf+0x298>
     df6:	20 e1       	ldi	r18, 0x10	; 16
     df8:	32 e0       	ldi	r19, 0x02	; 2
     dfa:	f8 01       	movw	r30, r16
     dfc:	b7 fe       	sbrs	r11, 7
     dfe:	07 c0       	rjmp	.+14     	; 0xe0e <vfprintf+0x2ac>
     e00:	60 81       	ld	r22, Z
     e02:	71 81       	ldd	r23, Z+1	; 0x01
     e04:	82 81       	ldd	r24, Z+2	; 0x02
     e06:	93 81       	ldd	r25, Z+3	; 0x03
     e08:	0c 5f       	subi	r16, 0xFC	; 252
     e0a:	1f 4f       	sbci	r17, 0xFF	; 255
     e0c:	06 c0       	rjmp	.+12     	; 0xe1a <vfprintf+0x2b8>
     e0e:	60 81       	ld	r22, Z
     e10:	71 81       	ldd	r23, Z+1	; 0x01
     e12:	80 e0       	ldi	r24, 0x00	; 0
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 5f       	subi	r16, 0xFE	; 254
     e18:	1f 4f       	sbci	r17, 0xFF	; 255
     e1a:	a3 01       	movw	r20, r6
     e1c:	f1 d0       	rcall	.+482    	; 0x1000 <__ultoa_invert>
     e1e:	88 2e       	mov	r8, r24
     e20:	86 18       	sub	r8, r6
     e22:	fb 2d       	mov	r31, r11
     e24:	ff 77       	andi	r31, 0x7F	; 127
     e26:	3f 2e       	mov	r3, r31
     e28:	36 fe       	sbrs	r3, 6
     e2a:	0d c0       	rjmp	.+26     	; 0xe46 <vfprintf+0x2e4>
     e2c:	23 2d       	mov	r18, r3
     e2e:	2e 7f       	andi	r18, 0xFE	; 254
     e30:	a2 2e       	mov	r10, r18
     e32:	89 14       	cp	r8, r9
     e34:	58 f4       	brcc	.+22     	; 0xe4c <vfprintf+0x2ea>
     e36:	34 fe       	sbrs	r3, 4
     e38:	0b c0       	rjmp	.+22     	; 0xe50 <vfprintf+0x2ee>
     e3a:	32 fc       	sbrc	r3, 2
     e3c:	09 c0       	rjmp	.+18     	; 0xe50 <vfprintf+0x2ee>
     e3e:	83 2d       	mov	r24, r3
     e40:	8e 7e       	andi	r24, 0xEE	; 238
     e42:	a8 2e       	mov	r10, r24
     e44:	05 c0       	rjmp	.+10     	; 0xe50 <vfprintf+0x2ee>
     e46:	b8 2c       	mov	r11, r8
     e48:	a3 2c       	mov	r10, r3
     e4a:	03 c0       	rjmp	.+6      	; 0xe52 <vfprintf+0x2f0>
     e4c:	b8 2c       	mov	r11, r8
     e4e:	01 c0       	rjmp	.+2      	; 0xe52 <vfprintf+0x2f0>
     e50:	b9 2c       	mov	r11, r9
     e52:	a4 fe       	sbrs	r10, 4
     e54:	0f c0       	rjmp	.+30     	; 0xe74 <vfprintf+0x312>
     e56:	fe 01       	movw	r30, r28
     e58:	e8 0d       	add	r30, r8
     e5a:	f1 1d       	adc	r31, r1
     e5c:	80 81       	ld	r24, Z
     e5e:	80 33       	cpi	r24, 0x30	; 48
     e60:	21 f4       	brne	.+8      	; 0xe6a <vfprintf+0x308>
     e62:	9a 2d       	mov	r25, r10
     e64:	99 7e       	andi	r25, 0xE9	; 233
     e66:	a9 2e       	mov	r10, r25
     e68:	09 c0       	rjmp	.+18     	; 0xe7c <vfprintf+0x31a>
     e6a:	a2 fe       	sbrs	r10, 2
     e6c:	06 c0       	rjmp	.+12     	; 0xe7a <vfprintf+0x318>
     e6e:	b3 94       	inc	r11
     e70:	b3 94       	inc	r11
     e72:	04 c0       	rjmp	.+8      	; 0xe7c <vfprintf+0x31a>
     e74:	8a 2d       	mov	r24, r10
     e76:	86 78       	andi	r24, 0x86	; 134
     e78:	09 f0       	breq	.+2      	; 0xe7c <vfprintf+0x31a>
     e7a:	b3 94       	inc	r11
     e7c:	a3 fc       	sbrc	r10, 3
     e7e:	10 c0       	rjmp	.+32     	; 0xea0 <vfprintf+0x33e>
     e80:	a0 fe       	sbrs	r10, 0
     e82:	06 c0       	rjmp	.+12     	; 0xe90 <vfprintf+0x32e>
     e84:	b2 14       	cp	r11, r2
     e86:	80 f4       	brcc	.+32     	; 0xea8 <vfprintf+0x346>
     e88:	28 0c       	add	r2, r8
     e8a:	92 2c       	mov	r9, r2
     e8c:	9b 18       	sub	r9, r11
     e8e:	0d c0       	rjmp	.+26     	; 0xeaa <vfprintf+0x348>
     e90:	b2 14       	cp	r11, r2
     e92:	58 f4       	brcc	.+22     	; 0xeaa <vfprintf+0x348>
     e94:	b6 01       	movw	r22, r12
     e96:	80 e2       	ldi	r24, 0x20	; 32
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	76 d0       	rcall	.+236    	; 0xf88 <fputc>
     e9c:	b3 94       	inc	r11
     e9e:	f8 cf       	rjmp	.-16     	; 0xe90 <vfprintf+0x32e>
     ea0:	b2 14       	cp	r11, r2
     ea2:	18 f4       	brcc	.+6      	; 0xeaa <vfprintf+0x348>
     ea4:	2b 18       	sub	r2, r11
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <vfprintf+0x34a>
     ea8:	98 2c       	mov	r9, r8
     eaa:	21 2c       	mov	r2, r1
     eac:	a4 fe       	sbrs	r10, 4
     eae:	0f c0       	rjmp	.+30     	; 0xece <vfprintf+0x36c>
     eb0:	b6 01       	movw	r22, r12
     eb2:	80 e3       	ldi	r24, 0x30	; 48
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	68 d0       	rcall	.+208    	; 0xf88 <fputc>
     eb8:	a2 fe       	sbrs	r10, 2
     eba:	16 c0       	rjmp	.+44     	; 0xee8 <vfprintf+0x386>
     ebc:	a1 fc       	sbrc	r10, 1
     ebe:	03 c0       	rjmp	.+6      	; 0xec6 <vfprintf+0x364>
     ec0:	88 e7       	ldi	r24, 0x78	; 120
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <vfprintf+0x368>
     ec6:	88 e5       	ldi	r24, 0x58	; 88
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	b6 01       	movw	r22, r12
     ecc:	0c c0       	rjmp	.+24     	; 0xee6 <vfprintf+0x384>
     ece:	8a 2d       	mov	r24, r10
     ed0:	86 78       	andi	r24, 0x86	; 134
     ed2:	51 f0       	breq	.+20     	; 0xee8 <vfprintf+0x386>
     ed4:	a1 fe       	sbrs	r10, 1
     ed6:	02 c0       	rjmp	.+4      	; 0xedc <vfprintf+0x37a>
     ed8:	8b e2       	ldi	r24, 0x2B	; 43
     eda:	01 c0       	rjmp	.+2      	; 0xede <vfprintf+0x37c>
     edc:	80 e2       	ldi	r24, 0x20	; 32
     ede:	a7 fc       	sbrc	r10, 7
     ee0:	8d e2       	ldi	r24, 0x2D	; 45
     ee2:	b6 01       	movw	r22, r12
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	50 d0       	rcall	.+160    	; 0xf88 <fputc>
     ee8:	89 14       	cp	r8, r9
     eea:	30 f4       	brcc	.+12     	; 0xef8 <vfprintf+0x396>
     eec:	b6 01       	movw	r22, r12
     eee:	80 e3       	ldi	r24, 0x30	; 48
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	4a d0       	rcall	.+148    	; 0xf88 <fputc>
     ef4:	9a 94       	dec	r9
     ef6:	f8 cf       	rjmp	.-16     	; 0xee8 <vfprintf+0x386>
     ef8:	8a 94       	dec	r8
     efa:	f3 01       	movw	r30, r6
     efc:	e8 0d       	add	r30, r8
     efe:	f1 1d       	adc	r31, r1
     f00:	80 81       	ld	r24, Z
     f02:	b6 01       	movw	r22, r12
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	40 d0       	rcall	.+128    	; 0xf88 <fputc>
     f08:	81 10       	cpse	r8, r1
     f0a:	f6 cf       	rjmp	.-20     	; 0xef8 <vfprintf+0x396>
     f0c:	22 20       	and	r2, r2
     f0e:	09 f4       	brne	.+2      	; 0xf12 <vfprintf+0x3b0>
     f10:	4e ce       	rjmp	.-868    	; 0xbae <vfprintf+0x4c>
     f12:	b6 01       	movw	r22, r12
     f14:	80 e2       	ldi	r24, 0x20	; 32
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	37 d0       	rcall	.+110    	; 0xf88 <fputc>
     f1a:	2a 94       	dec	r2
     f1c:	f7 cf       	rjmp	.-18     	; 0xf0c <vfprintf+0x3aa>
     f1e:	f6 01       	movw	r30, r12
     f20:	86 81       	ldd	r24, Z+6	; 0x06
     f22:	97 81       	ldd	r25, Z+7	; 0x07
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <vfprintf+0x3c8>
     f26:	8f ef       	ldi	r24, 0xFF	; 255
     f28:	9f ef       	ldi	r25, 0xFF	; 255
     f2a:	2b 96       	adiw	r28, 0x0b	; 11
     f2c:	0f b6       	in	r0, 0x3f	; 63
     f2e:	f8 94       	cli
     f30:	de bf       	out	0x3e, r29	; 62
     f32:	0f be       	out	0x3f, r0	; 63
     f34:	cd bf       	out	0x3d, r28	; 61
     f36:	df 91       	pop	r29
     f38:	cf 91       	pop	r28
     f3a:	1f 91       	pop	r17
     f3c:	0f 91       	pop	r16
     f3e:	ff 90       	pop	r15
     f40:	ef 90       	pop	r14
     f42:	df 90       	pop	r13
     f44:	cf 90       	pop	r12
     f46:	bf 90       	pop	r11
     f48:	af 90       	pop	r10
     f4a:	9f 90       	pop	r9
     f4c:	8f 90       	pop	r8
     f4e:	7f 90       	pop	r7
     f50:	6f 90       	pop	r6
     f52:	5f 90       	pop	r5
     f54:	4f 90       	pop	r4
     f56:	3f 90       	pop	r3
     f58:	2f 90       	pop	r2
     f5a:	08 95       	ret

00000f5c <strnlen_P>:
     f5c:	fc 01       	movw	r30, r24
     f5e:	05 90       	lpm	r0, Z+
     f60:	61 50       	subi	r22, 0x01	; 1
     f62:	70 40       	sbci	r23, 0x00	; 0
     f64:	01 10       	cpse	r0, r1
     f66:	d8 f7       	brcc	.-10     	; 0xf5e <strnlen_P+0x2>
     f68:	80 95       	com	r24
     f6a:	90 95       	com	r25
     f6c:	8e 0f       	add	r24, r30
     f6e:	9f 1f       	adc	r25, r31
     f70:	08 95       	ret

00000f72 <strnlen>:
     f72:	fc 01       	movw	r30, r24
     f74:	61 50       	subi	r22, 0x01	; 1
     f76:	70 40       	sbci	r23, 0x00	; 0
     f78:	01 90       	ld	r0, Z+
     f7a:	01 10       	cpse	r0, r1
     f7c:	d8 f7       	brcc	.-10     	; 0xf74 <strnlen+0x2>
     f7e:	80 95       	com	r24
     f80:	90 95       	com	r25
     f82:	8e 0f       	add	r24, r30
     f84:	9f 1f       	adc	r25, r31
     f86:	08 95       	ret

00000f88 <fputc>:
     f88:	0f 93       	push	r16
     f8a:	1f 93       	push	r17
     f8c:	cf 93       	push	r28
     f8e:	df 93       	push	r29
     f90:	fb 01       	movw	r30, r22
     f92:	23 81       	ldd	r18, Z+3	; 0x03
     f94:	21 fd       	sbrc	r18, 1
     f96:	03 c0       	rjmp	.+6      	; 0xf9e <fputc+0x16>
     f98:	8f ef       	ldi	r24, 0xFF	; 255
     f9a:	9f ef       	ldi	r25, 0xFF	; 255
     f9c:	2c c0       	rjmp	.+88     	; 0xff6 <fputc+0x6e>
     f9e:	22 ff       	sbrs	r18, 2
     fa0:	16 c0       	rjmp	.+44     	; 0xfce <fputc+0x46>
     fa2:	46 81       	ldd	r20, Z+6	; 0x06
     fa4:	57 81       	ldd	r21, Z+7	; 0x07
     fa6:	24 81       	ldd	r18, Z+4	; 0x04
     fa8:	35 81       	ldd	r19, Z+5	; 0x05
     faa:	42 17       	cp	r20, r18
     fac:	53 07       	cpc	r21, r19
     fae:	44 f4       	brge	.+16     	; 0xfc0 <fputc+0x38>
     fb0:	a0 81       	ld	r26, Z
     fb2:	b1 81       	ldd	r27, Z+1	; 0x01
     fb4:	9d 01       	movw	r18, r26
     fb6:	2f 5f       	subi	r18, 0xFF	; 255
     fb8:	3f 4f       	sbci	r19, 0xFF	; 255
     fba:	31 83       	std	Z+1, r19	; 0x01
     fbc:	20 83       	st	Z, r18
     fbe:	8c 93       	st	X, r24
     fc0:	26 81       	ldd	r18, Z+6	; 0x06
     fc2:	37 81       	ldd	r19, Z+7	; 0x07
     fc4:	2f 5f       	subi	r18, 0xFF	; 255
     fc6:	3f 4f       	sbci	r19, 0xFF	; 255
     fc8:	37 83       	std	Z+7, r19	; 0x07
     fca:	26 83       	std	Z+6, r18	; 0x06
     fcc:	14 c0       	rjmp	.+40     	; 0xff6 <fputc+0x6e>
     fce:	8b 01       	movw	r16, r22
     fd0:	ec 01       	movw	r28, r24
     fd2:	fb 01       	movw	r30, r22
     fd4:	00 84       	ldd	r0, Z+8	; 0x08
     fd6:	f1 85       	ldd	r31, Z+9	; 0x09
     fd8:	e0 2d       	mov	r30, r0
     fda:	09 95       	icall
     fdc:	89 2b       	or	r24, r25
     fde:	e1 f6       	brne	.-72     	; 0xf98 <fputc+0x10>
     fe0:	d8 01       	movw	r26, r16
     fe2:	16 96       	adiw	r26, 0x06	; 6
     fe4:	8d 91       	ld	r24, X+
     fe6:	9c 91       	ld	r25, X
     fe8:	17 97       	sbiw	r26, 0x07	; 7
     fea:	01 96       	adiw	r24, 0x01	; 1
     fec:	17 96       	adiw	r26, 0x07	; 7
     fee:	9c 93       	st	X, r25
     ff0:	8e 93       	st	-X, r24
     ff2:	16 97       	sbiw	r26, 0x06	; 6
     ff4:	ce 01       	movw	r24, r28
     ff6:	df 91       	pop	r29
     ff8:	cf 91       	pop	r28
     ffa:	1f 91       	pop	r17
     ffc:	0f 91       	pop	r16
     ffe:	08 95       	ret

00001000 <__ultoa_invert>:
    1000:	fa 01       	movw	r30, r20
    1002:	aa 27       	eor	r26, r26
    1004:	28 30       	cpi	r18, 0x08	; 8
    1006:	51 f1       	breq	.+84     	; 0x105c <__ultoa_invert+0x5c>
    1008:	20 31       	cpi	r18, 0x10	; 16
    100a:	81 f1       	breq	.+96     	; 0x106c <__ultoa_invert+0x6c>
    100c:	e8 94       	clt
    100e:	6f 93       	push	r22
    1010:	6e 7f       	andi	r22, 0xFE	; 254
    1012:	6e 5f       	subi	r22, 0xFE	; 254
    1014:	7f 4f       	sbci	r23, 0xFF	; 255
    1016:	8f 4f       	sbci	r24, 0xFF	; 255
    1018:	9f 4f       	sbci	r25, 0xFF	; 255
    101a:	af 4f       	sbci	r26, 0xFF	; 255
    101c:	b1 e0       	ldi	r27, 0x01	; 1
    101e:	3e d0       	rcall	.+124    	; 0x109c <__ultoa_invert+0x9c>
    1020:	b4 e0       	ldi	r27, 0x04	; 4
    1022:	3c d0       	rcall	.+120    	; 0x109c <__ultoa_invert+0x9c>
    1024:	67 0f       	add	r22, r23
    1026:	78 1f       	adc	r23, r24
    1028:	89 1f       	adc	r24, r25
    102a:	9a 1f       	adc	r25, r26
    102c:	a1 1d       	adc	r26, r1
    102e:	68 0f       	add	r22, r24
    1030:	79 1f       	adc	r23, r25
    1032:	8a 1f       	adc	r24, r26
    1034:	91 1d       	adc	r25, r1
    1036:	a1 1d       	adc	r26, r1
    1038:	6a 0f       	add	r22, r26
    103a:	71 1d       	adc	r23, r1
    103c:	81 1d       	adc	r24, r1
    103e:	91 1d       	adc	r25, r1
    1040:	a1 1d       	adc	r26, r1
    1042:	20 d0       	rcall	.+64     	; 0x1084 <__ultoa_invert+0x84>
    1044:	09 f4       	brne	.+2      	; 0x1048 <__ultoa_invert+0x48>
    1046:	68 94       	set
    1048:	3f 91       	pop	r19
    104a:	2a e0       	ldi	r18, 0x0A	; 10
    104c:	26 9f       	mul	r18, r22
    104e:	11 24       	eor	r1, r1
    1050:	30 19       	sub	r19, r0
    1052:	30 5d       	subi	r19, 0xD0	; 208
    1054:	31 93       	st	Z+, r19
    1056:	de f6       	brtc	.-74     	; 0x100e <__ultoa_invert+0xe>
    1058:	cf 01       	movw	r24, r30
    105a:	08 95       	ret
    105c:	46 2f       	mov	r20, r22
    105e:	47 70       	andi	r20, 0x07	; 7
    1060:	40 5d       	subi	r20, 0xD0	; 208
    1062:	41 93       	st	Z+, r20
    1064:	b3 e0       	ldi	r27, 0x03	; 3
    1066:	0f d0       	rcall	.+30     	; 0x1086 <__ultoa_invert+0x86>
    1068:	c9 f7       	brne	.-14     	; 0x105c <__ultoa_invert+0x5c>
    106a:	f6 cf       	rjmp	.-20     	; 0x1058 <__ultoa_invert+0x58>
    106c:	46 2f       	mov	r20, r22
    106e:	4f 70       	andi	r20, 0x0F	; 15
    1070:	40 5d       	subi	r20, 0xD0	; 208
    1072:	4a 33       	cpi	r20, 0x3A	; 58
    1074:	18 f0       	brcs	.+6      	; 0x107c <__ultoa_invert+0x7c>
    1076:	49 5d       	subi	r20, 0xD9	; 217
    1078:	31 fd       	sbrc	r19, 1
    107a:	40 52       	subi	r20, 0x20	; 32
    107c:	41 93       	st	Z+, r20
    107e:	02 d0       	rcall	.+4      	; 0x1084 <__ultoa_invert+0x84>
    1080:	a9 f7       	brne	.-22     	; 0x106c <__ultoa_invert+0x6c>
    1082:	ea cf       	rjmp	.-44     	; 0x1058 <__ultoa_invert+0x58>
    1084:	b4 e0       	ldi	r27, 0x04	; 4
    1086:	a6 95       	lsr	r26
    1088:	97 95       	ror	r25
    108a:	87 95       	ror	r24
    108c:	77 95       	ror	r23
    108e:	67 95       	ror	r22
    1090:	ba 95       	dec	r27
    1092:	c9 f7       	brne	.-14     	; 0x1086 <__ultoa_invert+0x86>
    1094:	00 97       	sbiw	r24, 0x00	; 0
    1096:	61 05       	cpc	r22, r1
    1098:	71 05       	cpc	r23, r1
    109a:	08 95       	ret
    109c:	9b 01       	movw	r18, r22
    109e:	ac 01       	movw	r20, r24
    10a0:	0a 2e       	mov	r0, r26
    10a2:	06 94       	lsr	r0
    10a4:	57 95       	ror	r21
    10a6:	47 95       	ror	r20
    10a8:	37 95       	ror	r19
    10aa:	27 95       	ror	r18
    10ac:	ba 95       	dec	r27
    10ae:	c9 f7       	brne	.-14     	; 0x10a2 <__ultoa_invert+0xa2>
    10b0:	62 0f       	add	r22, r18
    10b2:	73 1f       	adc	r23, r19
    10b4:	84 1f       	adc	r24, r20
    10b6:	95 1f       	adc	r25, r21
    10b8:	a0 1d       	adc	r26, r0
    10ba:	08 95       	ret

000010bc <_exit>:
    10bc:	f8 94       	cli

000010be <__stop_program>:
    10be:	ff cf       	rjmp	.-2      	; 0x10be <__stop_program>
